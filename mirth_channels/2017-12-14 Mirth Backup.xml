<serverConfiguration version="3.4.2">
  <date>2017-12-14 02:40:43</date>
  <channelGroups/>
  <channels>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-89d8557f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>CHALABAMA_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512941777730</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50010</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (Before processing)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/chalabama/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;CHALABAMA&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;


     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, clinic_name, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +$(&apos;area_code&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;local_number&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;clinic_name&apos;)+ &quot;&apos;, &apos;&quot;+$(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));


for(var i=0; i&lt;msg[&apos;PID&apos;][&apos;PID.13&apos;].length(); i++){
    if(msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()==&apos;PRN&apos;){
    	channelMap.put(&apos;area_code&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.6&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
    	channelMap.put(&apos;local_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
    	if(msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.7&apos;].toString().length == 10){
    		channelMap.put(&apos;area_code&apos;, ((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.6&apos;].toString()).substring(0,3)).replace(/&apos;/g, &quot;\\&apos;&quot;));
    		channelMap.put(&apos;local_number&apos;, ((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.6&apos;].toString()).substring(3,10)).replace(/&apos;/g, &quot;\\&apos;&quot;));
    	}
    }else if (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()==&apos;ORN&apos;){
    	channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.6&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;)
    	+ (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
    }else if (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()==&apos;NET&apos;){
    	channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
    }
	
}


for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][0][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][0][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][0][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][0][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][0][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][0][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][0][&apos;PV2.23.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;clinic_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.10&apos;][0][&apos;PV1.10.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString().slice(0,20));
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));


for(var i=0; i&lt;msg[&apos;PID&apos;][&apos;PID.13&apos;].length(); i++){
    if(msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()==&apos;PRN&apos;){
    	channelMap.put(&apos;area_code&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.6&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
    	channelMap.put(&apos;local_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
    	if(msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.7&apos;].toString().length == 10){
    		channelMap.put(&apos;area_code&apos;, ((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.6&apos;].toString()).substring(0,3)).replace(/&apos;/g, &quot;\\&apos;&quot;));
    		channelMap.put(&apos;local_number&apos;, ((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.6&apos;].toString()).substring(3,10)).replace(/&apos;/g, &quot;\\&apos;&quot;));
    	}
    }else if (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()==&apos;ORN&apos;){
    	channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.6&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;)
    	+ (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
    }else if (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()==&apos;NET&apos;){
    	channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
    }
	
}


for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][0][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][0][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][0][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][0][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][0][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][0][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][0][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][0][&apos;PV2.23.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;clinic_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.10&apos;][0][&apos;PV1.10.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString().slice(0,20));
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8U09BUkZ8QTBTRnx8fDIwMTcxMDA5MTg1Mnx8QURUXkEwM3w3NkI4NTU1MS0xM0U3
LTQ0NDktOTFCNS0yQkIwNDA5OEY1QUV8UHwyLjd8fDEKRVZOfEEwM3wyMDE3MTAwOTE4NTJ8fENP
fEEwU0ZfQ0hTMTA3NjI1fDIwMTcxMDA5MTg1MnwxOTM1ClBJRHwxfHwxNDUxNDQzXl5eMTReTVJe
XjIwMTIwNTIwfjE1NTg2MjZeXl45MDAwMDBeUE5eXjIwMTIwNTIwfHxLSU5HXlJPRFJJR1VFWl5E
RVdBTkVeXl5eTF5eXjIwMTIwNTIwfktJTkdeUk9EUklRVUVaXkReXl5eQV5eXjIwMTIxMjAxfktJ
TkdeUk9EUklRVUVeRF5eXl5BXl5eMjAxNjA1MjJ+S0lORyBKUl5ST0RSSVFVRV5EXl5eXkFeXl4y
MDE3MDgyNHx8MjAxMDAxMTR8TXx8QnwzMTA5IEFWRU5VRSBTXl5CSVJNSU5HSEFNXkFMXjM1MjA4
XlVTQV5NXl4wNzNeXl4yMDEyMDUyMHx8XlBSTl5QSF5eMV4yMDVeMjIzNzc3Nn5eT1JOXkNQXl4x
XjIwNV4yNDMwODc4fl5ORVReXkVSSkFNTzIyQEdNQUlMLkNPTXx8RXxTfE5PTnw4ODU1NTEwXl5e
MTReVkNEXl4yMDE3MTAwOXx8fHxOT1QgT0YgSElTUEFOSUMgT1JJR0lOfHxOfDB8fHx8fE58Tnx8
MjAxNzEwMDkxNzE5ClBWMXwxfE98fEVMRUNUSVZFfHx8MDEyNjleTE9TRV5FRFdBUkReSi5eXl5e
XjExXkxeXl5QUk5eXl5eMTk2MDAxMDF+MTQ5Nzc4Njk1OF5eXl5eXl5eOTAwMDA0Xl5eXk5QSX4x
NzleXl5eXl5eXjkwMDAwMF5eXl5ETn4wMDEyNjleXl5eXl5eXjgzODNeXl5eUFJOfjEyNjleXl5e
Xl5eXjEwMjk3Xl5eXlBSTnx8fE1FRHx8fE58UEhZUyBPUiBTRUxGfHx8MDEyNjleTE9TRV5FRFdB
UkReSi5eXl5eXjExXkxeXl5QUk5eXl5eMTk2MDAxMDF+MTQ5Nzc4Njk1OF5eXl5eXl5eOTAwMDA0
Xl5eXk5QSX4xNzleXl5eXl5eXjkwMDAwMF5eXl5ETn4wMDEyNjleXl5eXl5eXjgzODNeXl5eUFJO
fjEyNjleXl5eXl5eXjEwMjk3Xl5eXlBSTnxBTkNJTEwufDI1MDA1NDleXl4xNF5WTl5eMjAxNzEw
MDl8QkN8fHx8fHx8fHx8fHx8fHx8Uk9VVElORXx8fDE5MzV8fHx8fDIwMTcxMDA5MTcxOXwyMDE3
MTAwOTE4NTJ8fHx8fHxWClBWMnx8fF5TVE9NQUNIQUNIRXx8fHx+fn5+RkFMU0V8fHx8fHx8fE58
fHx8fHxOfHxBSFBDXkxeMjU2MF5eXjkwMDAwMF5YWH5eXjAxRDA2NDE1MTleXl45MDAwMDJeQ0xJ
QX5eXjEzNDYzMjk0MTReXl45MDAwMDReTlBJfl5eNjMwMzA3MzA2Xl5eOTAwMDAxXlRYfl5eODI1
NjVeXl4xMDQzN15IUE9HTE1LfENIRUNLRUQgT1VUfFJ8fHx8fHxOfHx8fHxOCk9CWHwxfE5NfDky
NzItNl5BUEdBUiAxXkxOfHwwCk9CWHwyfE5NfDkyNzQtMl5BUEdBUiA1XkxOfHwwCklOMXwxfDEx
MF5BTEwgS0lEUyBCTFVFIENST1NTfDheXl45MDAwMDBeWFheXjIwMDkwMzEwfjYzMDEwMzgzMF5e
XjkwMDAwMV5UWF5eMjAxMjA1MTB+QUxDMDAwMDBeXl45XkNSSV5eMjAxMjA1MTZ8QkxVRSBDUk9T
U15MXjheXl45MDAwMDBeWFh8NDUwIFJJVkVSQ0hBU0UgUEFSS1dBWV5eQklSTUlOR0hBTV5BTF4z
NTI0NF5VU0FeTV5eMDczXl5QT0xDUy1NfjQ1MCBSSVZFUkNIQVNFIFBBUktXQVkgRUFTVF5eQklS
TUlOR0hBTV5BTF4zNTI0NF5VU0FeTV5eXl5QTUFJTn5QTyBCT1ggMjEyMzReXkVBR0FOXk1OXjU1
MTIxXlVTQV5NXl5eXlBNQUlOfF5eXl5eXl5QT0xDUy1NfkJMVUUgQ1JPU1MgQUxBQkFNQSBQTURe
Xl5eXl5eUE1BSU5+TkRCSCBDTEFJTVMgREVQQVJUTUVOVF5eXl5eXl5QTUFJTnxeV1BOXlBIXl4w
XjIwNV4yMjAyMTAwXl5QT0xDUy1Nfl5XUE5eUEheXjBeODU1XjUyNTcyODNeXlBNQUlOfDA1MDAw
IDAwMXxBTEwgS0lEUyBCTFVFIENST1NTfHx8fHx8SEVBTFRIfEtJTkdeUk9EUklHVUVaXkRFV0FO
RV5eXl5MXl5eMjAxMjA1MjB+S0lOR15ST0RSSVFVRVpeRF5eXl5BXl5eMjAxMjEyMDF+S0lOR15S
T0RSSVFVRV5EXl5eXkFeXl4yMDE2MDUyMn5LSU5HIEpSXlJPRFJJUVVFXkReXl5eQV5eXjIwMTcw
ODI0fFNFTEZ8MjAxMDAxMTR8MzEwOSBBVkVOVUUgU15eQklSTUlOR0hBTV5BTF4zNTIwOF5VU0Fe
TV5eMDczfE9OIEZJTEV8fDF8fHx8fFl8fDIwMTcxMDA5fHx8fHx8fEtJRDg4MTYyNjkxNXx8fHx8
fHxNfHxUUlVFfHx8fDE0NTE0NDNeXl4xNF5NUl5eMjAxMjA1MjB+MTU1ODYyNl5eXjkwMDAwMF5Q
Tl5eMjAxMjA1MjAKSU4yfHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fEV8fHx8fE5P
Tnx8fE5PVCBPRiBISVNQQU5JQyBPUklHSU58U3x8fHx8fHx8fHx8fHx8fHx8fHx8XlBSTl5QSF5e
MV4yMDVeMjIzNzc3Nn5eT1JOXkNQXl4xXjIwNV4yNDMwODc4fl5ORVReXkVSSkFNTzIyQEdNQUlM
LkNPTXx8fHx8fHx8QnxTRUxGCg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return false;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return false;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return false;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return false;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-89d8888f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>CHCOLORADO_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1507773278238</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>1</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50015</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/chcolorado/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;CHCOLORADO&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
    if(msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.10&apos;].toString() != null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.10&apos;].toString() != &apos;&apos;
        &amp;&amp; msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.8&apos;].toString() == &apos;NET&apos;){
	   channelMap.put(&apos;email_address&apos;, msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.10&apos;].toString());
    }
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
    if(msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.10&apos;].toString() != null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.10&apos;].toString() != &apos;&apos;
        &amp;&amp; msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.8&apos;].toString() == &apos;NET&apos;){
	   channelMap.put(&apos;email_address&apos;, msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.10&apos;].toString());
    }
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8RVBJQyBSRUdJU1RSQVRJT058RUhDfHx8MjAxNzA3MTAxNTAyMDR8QVNBUFJOMnxB
RFReQTAzfDIyNjgxfFB8Mi41CkVWTnxBMDN8MjAxNzA3MTAxNTAyMDR8fEFEVF9FVkVOVHxBU0FQ
Uk4yXkFTQVBeTlVSU0VeVFdPXl5eXl5DSEFeXl5eXkxHU0JSfDIwMTcwNzEwMTUwMTAwClBJRHwx
fDI5ODE4MTV8QzExNTA5fHxVQ15EUkFYfHwyMDA4MDcwN3xNfHwxNXwyODAwIENFTlRVUlkgUEtX
WV5eQVRMQU5UQV5HQV4zMDM0NV5VU15eXkRFS0FMQnxERUtBTEJ8KDc3MCk1NTUtMTIxMl5eN3x8
RXxTfHw2MDIzMTc3Nzd8fHx8REVDTElORUR8fE58fFlFU3x8fHxOClBWMXwxfE98U0JJQ15TQklD
XjAxXkVIQ3xYfHx8QVNQTUQ2XkFTQVBeTUReU0lYfDQwNzM0Nl5CRU5BWU9VTl5KT0FOQV5JfHxJ
TUN8fHx8Uk18fHx8fDMxMjg0NDM3fENNfHx8fHx8fHx8fHx8fHx8fEFIUnx8fHx8fHx8MjAxNzA3
MTAxMzIzMjF8MjAxNzA3MTAxNTAxMDAKUFYyfHx8fHx8fHx8fHx8M3x8fHx8fHx8fHxOfHx8fHx8
fHx8fHx8fHx8fFdBTEsgSU4KREcxfDF8SUNELTEwLUNNfEowMi4wXlN0cmVwdG9jb2NjYWwgcGhh
cnluZ2l0aXNeSUNELTEwLUNNfFN0cmVwdG9jb2NjYWwgcGhhcnluZ2l0aXM=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return false;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return false;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return false;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return false;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>5be81956-594f-4d53-81c9-c9af209b0c95</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>CHILDREN_MERCY_FILE</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1496960360921</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>1</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>5000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>c:/users/yyyhu/hl7/in</host>
          <fileFilter>*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>MOVE</afterProcessingAction>
          <moveToDirectory>c:/users/yyyhu/hl7/in/processed</moveToDirectory>
          <moveToFileName>${originalFilename}_${SYSTIME}</moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>0</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/childrenmercy</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString();
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = $(&apos;primary_phone_number&apos;).trim();
     if (phoneNumber.length() == 12){
     	areaCode = phoneNumber.substring(1,4);
     	localNumber = phoneNumber.substring(5,12);
     }else if((phoneNumber.length() &gt;=7)) {
     	localNumber = phoneNumber.substring(0,7);
     }

     var zip_mod = &apos;&apos;;
     var zipString = $(&apos;zip&apos;).trim();
     if(zipString.length() &lt;= 10){
     	zip_mod = zipString;
     }else{
     	zip_mod = zipString.substring(0,5);
     }



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
Cg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>Filter ER Patient</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ER&apos; ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCER&apos;  )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ER&apos; ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCER&apos;  )) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>Filter Ambulatory Patient</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;1HALL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;2HENSON&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3T-ICN&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3H-ICN&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;4HH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;4S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;5H&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;5HH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;6HALL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;6H&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;2S-PICU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SC2S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SC3S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;FHCINPT&apos;
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;1HALL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;2HENSON&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3T-ICN&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3H-ICN&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;4HH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;4S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;5H&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;5HH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;6HALL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;6H&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;2S-PICU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SC2S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SC3S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;FHCINPT&apos;
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>Filter Inpatient </name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3WSURGOBS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GIPOUT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADINTERV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCGIPOUT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEUP LAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEUP LAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSLEEP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;OT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NC OT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NC PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVPT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBOT&apos;
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3WSURGOBS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GIPOUT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADINTERV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCGIPOUT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEUP LAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEUP LAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSLEEP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;OT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NC OT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NC PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVPT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBOT&apos;
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>3</sequenceNumber>
                <name>Children Mercy MP</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARDDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CFC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BRNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICABD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DWSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BMTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SICC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEMADULT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEMCHILD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IDCTVL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEUC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IPM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CLPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PULC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHBC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SLEEP CL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEOC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SPORT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;URO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGT MGT HR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCWTMGSPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCWGTMGT&apos;
        
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARDDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CFC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BRNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICABD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DWSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BMTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SICC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEMADULT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEMCHILD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IDCTVL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEUC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IPM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CLPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PULC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHBC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SLEEP CL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEOC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SPORT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;URO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGT MGT HR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCWTMGSPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCWGTMGT&apos;
        
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>4</sequenceNumber>
                <name>Children Mercy Blue Valley</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVORTCSPOR&apos;
       
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVORTCSPOR&apos;
       
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>5</sequenceNumber>
                <name>Children Mercy Broadway</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCALC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DERC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDERC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCHSPAUD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCHSPSPPAT&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCOPTH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCOPH/RHU&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCWGTMGT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ADCSYN&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCTEEN&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCBEAC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCG&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCO&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCP&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCY&apos; 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCALC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DERC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDERC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCHSPAUD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCHSPSPPAT&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCOPTH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCOPH/RHU&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCWGTMGT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ADCSYN&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCTEEN&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCBEAC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCG&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCO&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCP&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCY&apos; 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>6</sequenceNumber>
                <name>Children Mercy College Blvd</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBCARDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBDMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBADHD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBADHDSUM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBDWSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CMEDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBENDCDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBGIC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBHSPAUD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBHSPSPPAT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBIDC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBIDC TVL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPULC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBRHBC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBRHC&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBSLEEP CL&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPHITWMC&apos;  
        
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBCARDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBDMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBADHD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBADHDSUM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBDWSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CMEDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBENDCDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBGIC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBHSPAUD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBHSPSPPAT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBIDC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBIDC TVL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPULC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBRHBC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBRHC&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBSLEEP CL&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPHITWMC&apos;  
        
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>7</sequenceNumber>
                <name>Children Mercy East</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECNEUC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECPLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSLEEPCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECRHBC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSLEEPCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSGC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECURO&apos;
        
        
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECNEUC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECPLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSLEEPCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECRHBC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSLEEPCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSGC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECURO&apos;
        
        
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>8</sequenceNumber>
                <name>Children Mercy Kansas</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCBEAC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCDER&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCGI&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCOPHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCPLC&apos;   
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCCLPC&apos;     
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCURO&apos; 
        
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCBEAC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCDER&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCGI&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCOPHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCPLC&apos;   
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCCLPC&apos;     
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCURO&apos; 
        
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>9</sequenceNumber>
                <name>Children Mercy North</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCALC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCBEAC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCCAR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCDER&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCDMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCEND DIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCEND&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCNEU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCORT&apos;   
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCPULC&apos;     
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCRHBC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCSLEEP CL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCSURG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCADC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCWGTMGT&apos;
         
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCALC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCBEAC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCCAR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCDER&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCDMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCEND DIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCEND&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCNEU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCORT&apos;   
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCPULC&apos;     
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCRHBC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCSLEEP CL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCSURG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCADC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCWGTMGT&apos;
         
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>10</sequenceNumber>
                <name>children Mercy West</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CMPPO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WCTEENCL&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CMPPO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WCTEENCL&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>11</sequenceNumber>
                <name>Children Mercy Operation Breakthrough</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SVDC&apos;
 
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SVDC&apos;
 
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>12</sequenceNumber>
                <name>Children Mercy Great Bend</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARCGREATB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCGTB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIABGRB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCGR&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARCGREATB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCGTB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIABGRB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCGR&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>13</sequenceNumber>
                <name>Children Mercy Joplin</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOCFC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCJOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCJOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JODIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICJO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOCJOP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOHEOC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOHPC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOPLC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC JOP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JORENC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JORHC&apos; 
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOCFC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCJOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCJOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JODIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICJO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOCJOP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOHEOC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOHPC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOPLC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC JOP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JORENC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JORHC&apos; 
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>14</sequenceNumber>
                <name>Children Mercy Junction</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARJU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCJUNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCJUNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIABJUNC&apos;
        
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARJU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCJUNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCJUNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIABJUNC&apos;
        
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>15</sequenceNumber>
                <name>Children Mercy MISC</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCPAR&apos;
        
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCPIT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDPITCC&apos;
        
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCSAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICSAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SAL&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCSPF&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICSP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOCSP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HPCSPRING&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SPRI&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHCSPR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHCARD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHDIAB&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICCARDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICENDMUR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICDIAMUR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICWIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICHEM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICRENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC WIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENCWICHS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC WICH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICPLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICRHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;UROWIC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVUCC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCUCC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECUCC&apos;

        
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCPAR&apos;
        
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCPIT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDPITCC&apos;
        
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCSAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICSAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SAL&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCSPF&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICSP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOCSP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HPCSPRING&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SPRI&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHCSPR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHCARD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHDIAB&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICCARDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICENDMUR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICDIAMUR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICWIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICHEM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICRENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC WIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENCWICHS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC WICH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICPLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICRHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;UROWIC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVUCC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCUCC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECUCC&apos;

        
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-60d8557f1497</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>CHILDREN_MERCY_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512941857861</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>2</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50002</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/childrenmercy</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString();
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = $(&apos;primary_phone_number&apos;).trim();
     if (phoneNumber.length() == 12){
     	areaCode = phoneNumber.substring(1,4);
     	localNumber = phoneNumber.substring(5,12);
     }else if((phoneNumber.length() &gt;=7)) {
     	localNumber = phoneNumber.substring(0,7);
     }

     var zip_mod = &apos;&apos;;
     var zipString = $(&apos;zip&apos;).trim();
     if(zipString.length() &lt;= 10){
     	zip_mod = zipString;
     }else{
     	zip_mod = zipString.substring(0,5);
     }



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
Cg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>Filter ER Patient</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ER&apos; ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCER&apos;  )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ER&apos; ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCER&apos;  )) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>Filter Ambulatory Patient</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;1HALL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;2HENSON&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3T-ICN&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3H-ICN&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;4HH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;4S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;5H&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;5HH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;6HALL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;6H&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;2S-PICU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SC2S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SC3S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;FHCINPT&apos;
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;1HALL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;2HENSON&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3T-ICN&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3H-ICN&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;4HH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;4S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;5H&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;5HH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;6HALL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;6H&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;2S-PICU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SC2S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SC3S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;FHCINPT&apos;
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>Filter Inpatient </name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3WSURGOBS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GIPOUT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADINTERV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCGIPOUT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEUP LAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEUP LAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSLEEP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;OT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NC OT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NC PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVPT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBOT&apos;
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;3WSURGOBS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GIPOUT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADINTERV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCGIPOUT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEUP LAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEUP LAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSLEEP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;OT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NC OT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NC PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVPT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBOT&apos;
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>3</sequenceNumber>
                <name>Children Mercy MP</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARDDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CFC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BRNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICABD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DWSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BMTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SICC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEMADULT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEMCHILD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IDCTVL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEUC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IPM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CLPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PULC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHBC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SLEEP CL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEOC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SPORT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;URO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGT MGT HR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCWTMGSPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCWGTMGT&apos;
        
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARDDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CFC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BRNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICABD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DWSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BMTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SICC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEMADULT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEMCHILD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IDCTVL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEUC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IPM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CLPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PULC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHBC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SLEEP CL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NEOC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SPORT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;URO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGT MGT HR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCWTMGSPC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCWGTMGT&apos;
        
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>4</sequenceNumber>
                <name>Children Mercy Blue Valley</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVORTCSPOR&apos;
       
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVORTCSPOR&apos;
       
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>5</sequenceNumber>
                <name>Children Mercy Broadway</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCALC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DERC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDERC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCHSPAUD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCHSPSPPAT&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCOPTH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCOPH/RHU&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCWGTMGT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ADCSYN&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCTEEN&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCBEAC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCG&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCO&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCP&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCY&apos; 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCALC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DERC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDERC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCHSPAUD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCHSPSPPAT&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCOPTH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCOPH/RHU&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCWGTMGT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ADCSYN&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCTEEN&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCBEAC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCG&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCO&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCP&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCPCCY&apos; 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>6</sequenceNumber>
                <name>Children Mercy College Blvd</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBCARDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBDMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBADHD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBADHDSUM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBDWSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CMEDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBENDCDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBGIC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBHSPAUD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBHSPSPPAT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBIDC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBIDC TVL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPULC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBRHBC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBRHC&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBSLEEP CL&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPHITWMC&apos;  
        
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBCARDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBDMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBADHD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBADHDSUM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBDWSC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CMEDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBENDCDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBGIC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBHSPAUD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBHSPSPPAT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBIDC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBIDC TVL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPULC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBRHBC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBRHC&apos;  
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBSLEEP CL&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CBPHITWMC&apos;  
        
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>7</sequenceNumber>
                <name>Children Mercy East</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECNEUC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECPLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSLEEPCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECRHBC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSLEEPCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSGC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECURO&apos;
        
        
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECNEUC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECPLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSLEEPCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECRHBC&apos;       
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSLEEPCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECSGC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECURO&apos;
        
        
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>8</sequenceNumber>
                <name>Children Mercy Kansas</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCBEAC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCDER&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCGI&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCOPHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCPLC&apos;   
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCCLPC&apos;     
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCURO&apos; 
        
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCBEAC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCDER&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCGI&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNEU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCOPHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCORTC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCPLC&apos;   
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCCLPC&apos;     
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCURO&apos; 
        
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>9</sequenceNumber>
                <name>Children Mercy North</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCALC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCBEAC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCCAR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCDER&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCDMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCEND DIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCEND&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCNEU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCORT&apos;   
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCPULC&apos;     
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCRHBC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCSLEEP CL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCSURG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCADC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCWGTMGT&apos;
         
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCALC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SCBEAC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCCAR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCDER&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCDMC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCEND DIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCEND&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCENT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCNEU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCORT&apos;   
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCPULC&apos;     
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCRHBC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCSLEEP CL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCORTCSPOR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCSURG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCADC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCWGTMGT&apos;
         
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>10</sequenceNumber>
                <name>children Mercy West</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CMPPO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WCTEENCL&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CMPPO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WCTEENCL&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>11</sequenceNumber>
                <name>Children Mercy Operation Breakthrough</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SVDC&apos;
 
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SVDC&apos;
 
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>12</sequenceNumber>
                <name>Children Mercy Great Bend</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARCGREATB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCGTB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIABGRB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCGR&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARCGREATB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCGTB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIABGRB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCGR&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>13</sequenceNumber>
                <name>Children Mercy Joplin</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOCFC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCJOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCJOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JODIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICJO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOCJOP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOHEOC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOHPC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOPLC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC JOP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JORENC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JORHC&apos; 
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOCFC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCJOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCJOP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JODIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICJO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOGIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOCJOP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOHEOC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOHPC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JOPLC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC JOP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JORENC&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;JORHC&apos; 
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>14</sequenceNumber>
                <name>Children Mercy Junction</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARJU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCJUNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCJUNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIABJUNC&apos;
        
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CARJU&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCJUNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCJUNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCDIABJUNC&apos;
        
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>15</sequenceNumber>
                <name>Children Mercy MISC</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCPAR&apos;
        
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCPIT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDPITCC&apos;
        
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCSAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICSAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SAL&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCSPF&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICSP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOCSP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HPCSPRING&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SPRI&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHCSPR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHCARD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHDIAB&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICCARDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICENDMUR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICDIAMUR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICWIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICHEM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICRENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC WIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENCWICHS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC WICH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICPLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICRHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;UROWIC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVUCC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCUCC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECUCC&apos;

        
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCPAR&apos;
        
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ENDCPIT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDPITCC&apos;
        
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCSAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICSAL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SAL&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BCENDCSPF&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICSP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HEOCSP&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HPCSPRING&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC SPRI&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RHCSPR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHCARD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJHDIAB&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICCARC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICCARDEV&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICDIAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICENDC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICENDMUR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICDIAMUR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GICWIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICHEM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICRENC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENC WIC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RENCWICHS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICNSGC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ORTC WICH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICPLC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WICRHC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;UROWIC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BVUCC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;NCUCC&apos;

        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ECUCC&apos;

        
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-80d8557f8898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>CHOA_FILE</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1501205577010</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>7</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>true</pollOnStart>
            <pollingFrequency>60000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/Users/yyyhu/hl7/in/choa</host>
          <fileFilter>*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>MOVE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory>C:/Users/yyyhu/hl7/in/choa/processed</errorMoveToDirectory>
          <errorMoveToFileName>${originalFilename}</errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>0</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/choa/${date.get(&apos;yyyyMMdd&apos;)}_File</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;CHOA&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

if (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));
} else {
	channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() );
}

if (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));
}else{
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
}


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

if (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));
} else {
	channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() );
}

if (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));
}else{
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
}


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
Cg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return false;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return false;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  ) {
	return false;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  ) {
	return false;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-80d8557f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>CHOA_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1501860897286</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>6</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50007</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/choa/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;CHOA&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos; )
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos; )
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8RVBJQ3xDRlBSVkZNfEhTSFN8SFNIU3wyMDE3MDYyMDA5MDMyM3wyMzUwMHxBRFRe
QTA0fDIzNzY3NnxUfDIuMgpFVk58QTA0fDIwMTcwNjIwMDkwMzIzfHxBUFBUX0NIRUNLX0lOfDIz
NTAwXlJPT1ReS0FNSV5TXl5eXl5JTF5eXl5eU0VPClBJRHwxfEUxMDY4NTk5Xl5eXkVQSX41NTY2
MTM4MF5eXl5NUk58NTU2NjEzODBeXl5eTVJOfHxURVNUXkVQSUN8fDE5ODgxMTAzfEZ8fFd8MTIz
IFNNSVRIIFNUXl5HUkVFTiBCQVleV0leNTQzMDFeVVNeTV5eQlJPV058QlJPV3woOTIwKTM0NS02
Nzg5Xl43Xl5eOTIwXjM0NTY3ODl8fEVOR0xJU0h8U3xMVVR8MzY2MTMzNDB8fHx8UEFUfHx8fHx8
fHxOClBEMXx8fFNUIE1BUllTIEhPU1BJVEFMIEdSRUVOIEJBWV5eOTIyfF5TTUlUSF5BTUJFUl5M
Xl5eXl5eXl5eRVdEUFJPVgpQVjF8MXxPfENGUFJWRk1eXl5DRlBSVkZNXl5eQ0ZQUlZGTXx8fHwx
ODExOTI2ODE5XldFSU5NRUlTVEVSXkRPTkFMRF5eXl5eXl5eXl5OUEl8MTgxMTkyNjgxOV5XRUlO
TUVJU1RFUl5ET05BTEReXl5eXl5eXl5eTlBJfHxIU0h8fHx8fHx8MTgxMTkyNjgxOV5XRUlOTUVJ
U1RFUl5ET05BTEReXl5eXl5eXl5eTlBJfHwzNjYxMzM0MHxPVEhSIE1OR0R8fHx8fHx8fHx8fHx8
fHx8fHx8fHx8Xl5eUFJFVnx8MjAxNzA2MjAwOTAzMjF8MjAxNzA2MjAwOTAzMjEKUFYyfHx8fHx8
fHx8fHx8fHx8fHx8fHx8fE4KSU4xfDF8OTcwMDQwMHw5NzAwNDAwfEFFVE5BfFBPIEJPWCA5ODEx
MDZeXkVMIFBBU09eVFheNzk5OTgtMTEwNnx8KDg4OCk2MzItMzg2Ml5eXl5eODg4XjYzMjM4NjJ8
MTIzNDU2Nzh8fHx8MjAxNzA2MjB8fHx8VEVTVF5FUElDfFNlfDE5ODgxMTAzfDEyMyBTTUlUSCBT
VF5eR1JFRU4gQkFZXldJXjU0MzAxXlVTXl5eQlJPV058fHwxKnx8fFlFfHx8fHx8fHx8fDIwNzY5
MTR8MTIzNDU2fHx8fHx8VU5LTk9XTnxGfDQ5MzYgTEFWRVJOQSBSRF5eU1BSSU5HRklFTEReSUxe
NjI3MDdeVVN8fHxCT1RI</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return false;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return false;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return false;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return false;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>8</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-60d8557f1486</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>COMMUNITY_HEALTH_FILE</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1496960339279</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>1</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>5000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>c:/users/yyyhu/hl7/in</host>
          <fileFilter>*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>MOVE</afterProcessingAction>
          <moveToDirectory>c:/users/yyyhu/hl7/in/processed</moveToDirectory>
          <moveToFileName>${originalFilename}_${SYSTIME}</moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>0</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/communityhealth</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString();
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = $(&apos;primary_phone_number&apos;).trim();
     if (phoneNumber.length() == 12){
     	areaCode = phoneNumber.substring(1,4);
     	localNumber = phoneNumber.substring(5,12);
     }else if((phoneNumber.length() &gt;=7)) {
     	localNumber = phoneNumber.substring(0,7);
     }

     var zip_mod = &apos;&apos;;
     var zipString = $(&apos;zip&apos;).trim();
     if(zipString.length() &lt;= 10){
     	zip_mod = zipString;
     }else{
     	zip_mod = zipString.substring(0,5);
     }



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
Cg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>Emergency Department</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-H&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-E&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-N&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-K&apos; 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-H&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-E&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-N&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-K&apos; 
        )) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>Walgreen Clinic</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI5&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI4&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNA&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNBG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG1&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI6&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI3&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI1&apos;
        
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI5&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI4&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNA&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNBG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG1&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI6&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI3&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI1&apos;
        
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>2</pruneMetaDataDays>
        <pruneContentDays>2</pruneContentDays>
        <archiveEnabled>false</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-60d8557f1496</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>COMMUNITY_HEALTH_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1505841292157</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>2</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50004</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/communityhealth</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString();
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = $(&apos;primary_phone_number&apos;).trim();
     if (phoneNumber.length() == 12){
     	areaCode = phoneNumber.substring(1,4);
     	localNumber = phoneNumber.substring(5,12);
     }else if((phoneNumber.length() &gt;=7)) {
     	localNumber = phoneNumber.substring(0,7);
     }

     var zip_mod = &apos;&apos;;
     var zipString = $(&apos;zip&apos;).trim();
     if(zipString.length() &lt;= 10){
     	zip_mod = zipString;
     }else{
     	zip_mod = zipString.substring(0,5);
     }



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
Cg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>Emergency Department</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-H&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-E&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-N&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-K&apos; 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-H&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-E&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-N&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-S&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ED-K&apos; 
        )) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>Walgreen Clinic</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI5&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI4&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNA&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNBG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG1&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI6&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI3&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI1&apos;
        
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI5&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI4&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNA&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNBG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG1&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI6&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI3&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI1&apos;
        
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>8</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0388-8889-bd68-89d8888f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>DRISCOLLCH_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512941906579</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50016</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (Before processing)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/driscollch/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;DRISCOLLCH&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;PROVID&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;PROVID&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8RVBJQyBSRUdJU1RSQVRJT058RUhDfHx8MjAxNzA3MTAxNTAyMDR8QVNBUFJOMnxB
RFReQTAzfDIyNjgxfFB8Mi41CkVWTnxBMDN8MjAxNzA3MTAxNTAyMDR8fEFEVF9FVkVOVHxBU0FQ
Uk4yXkFTQVBeTlVSU0VeVFdPXl5eXl5DSEFeXl5eXkxHU0JSfDIwMTcwNzEwMTUwMTAwClBJRHwx
fDI5ODE4MTV8QzExNTA5fHxVQ15EUkFYfHwyMDA4MDcwN3xNfHwxNXwyODAwIENFTlRVUlkgUEtX
WV5eQVRMQU5UQV5HQV4zMDM0NV5VU15eXkRFS0FMQnxERUtBTEJ8KDc3MCk1NTUtMTIxMl5eN3x8
RXxTfHw2MDIzMTc3Nzd8fHx8REVDTElORUR8fE58fFlFU3x8fHxOClBWMXwxfE98U0JJQ15TQklD
XjAxXkVIQ3xYfHx8QVNQTUQ2XkFTQVBeTUReU0lYfDQwNzM0Nl5CRU5BWU9VTl5KT0FOQV5JfHxJ
TUN8fHx8Uk18fHx8fDMxMjg0NDM3fENNfHx8fHx8fHx8fHx8fHx8fEFIUnx8fHx8fHx8MjAxNzA3
MTAxMzIzMjF8MjAxNzA3MTAxNTAxMDAKUFYyfHx8fHx8fHx8fHx8M3x8fHx8fHx8fHxOfHx8fHx8
fHx8fHx8fHx8fFdBTEsgSU4KREcxfDF8SUNELTEwLUNNfEowMi4wXlN0cmVwdG9jb2NjYWwgcGhh
cnluZ2l0aXNeSUNELTEwLUNNfFN0cmVwdG9jb2NjYWwgcGhhcnluZ2l0aXM=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e88ee1-0388-8889-bd68-89d8888f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>ESKENAZI_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1509396038181</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>2</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50017</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/eskenazi/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;ESKENAZI&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos; || msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.3&apos;].toString()== &apos;Internet&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;] != null)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  
	    (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)  ||
	    (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;PROVID&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos; || msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.3&apos;].toString()== &apos;Internet&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;] != null)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  
	    (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)  ||
	    (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;PROVID&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8RVBJQyBSRUdJU1RSQVRJT058RUhDfHx8MjAxNzA3MTAxNTAyMDR8QVNBUFJOMnxB
RFReQTAzfDIyNjgxfFB8Mi41CkVWTnxBMDN8MjAxNzA3MTAxNTAyMDR8fEFEVF9FVkVOVHxBU0FQ
Uk4yXkFTQVBeTlVSU0VeVFdPXl5eXl5DSEFeXl5eXkxHU0JSfDIwMTcwNzEwMTUwMTAwClBJRHwx
fDI5ODE4MTV8QzExNTA5fHxVQ15EUkFYfHwyMDA4MDcwN3xNfHwxNXwyODAwIENFTlRVUlkgUEtX
WV5eQVRMQU5UQV5HQV4zMDM0NV5VU15eXkRFS0FMQnxERUtBTEJ8KDc3MCk1NTUtMTIxMl5eN3x8
RXxTfHw2MDIzMTc3Nzd8fHx8REVDTElORUR8fE58fFlFU3x8fHxOClBWMXwxfE98U0JJQ15TQklD
XjAxXkVIQ3xYfHx8QVNQTUQ2XkFTQVBeTUReU0lYfDQwNzM0Nl5CRU5BWU9VTl5KT0FOQV5JfHxJ
TUN8fHx8Uk18fHx8fDMxMjg0NDM3fENNfHx8fHx8fHx8fHx8fHx8fEFIUnx8fHx8fHx8MjAxNzA3
MTAxMzIzMjF8MjAxNzA3MTAxNTAxMDAKUFYyfHx8fHx8fHx8fHx8M3x8fHx8fHx8fHxOfHx8fHx8
fHx8fHx8fHx8fFdBTEsgSU4KREcxfDF8SUNELTEwLUNNfEowMi4wXlN0cmVwdG9jb2NjYWwgcGhh
cnluZ2l0aXNeSUNELTEwLUNNfFN0cmVwdG9jb2NjYWwgcGhhcnluZ2l0aXM=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;)) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;)) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>3</sequenceNumber>
                <name>A31 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A31&apos;)) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A31&apos;)) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a19-46a2-8098-3615d0193726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1510336434537</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>SWG*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>c:/users/yyyhu/hl7/out/swgh</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>C:/Users/yyyhu/hl7/out/swgh</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;SWG_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;SWG_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a88-46a2-8098-8688d0895726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_CHALABAMA</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1510336658046</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>120000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>CHALABAMA_HL7*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/chalabama/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/chalabama/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;CHALABAMA_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;CHALABAMA_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a19-46a2-8098-8688d0895726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_CHCOLORADO</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1513021942633</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>8</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>120000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>CHCOLORADO_HL7*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/chcolorado/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/chcolorado/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;CHCOLORADO_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>true</queueEnabled>
              <sendFirst>true</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>3</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>100000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>true</queueEnabled>
              <sendFirst>true</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>3</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>100000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;CHCOLORADO_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a19-46a2-8098-8615d0895726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_CHOA</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512941969995</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>CHOA*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/choa/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/choa/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;CHOA_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;CHOA_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a66-86a2-8098-8888d0895726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_DRISCOLLCH</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512941998355</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>DRISCOLLCH_HL7*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/driscollch/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/driscollch/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;DRISCOLLCH_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;DRISCOLLCH_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a19-86a2-8098-8888d0895726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_ESKENAZI</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512942028110</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>ESKENAZI*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/eskenazi/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/eskenazi/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;ESKENAZI_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;ESKENAZI_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a89-46a2-8098-8688d0895726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_MENIFEE</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512015509365</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>2</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>MENIFEE*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/menifee/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/menifee/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;MENIFEE_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;MENIFEE_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f66-2a88-46a2-8098-8688d0895726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_METROHEALTH</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1510361086292</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>1</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>METROHEALTH_HL7*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/metrohealth/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/metrohealth/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;METROHEALTH_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;METROHEALTH_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a19-86a2-8098-8615d0895726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_NORMANRMC</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512015546361</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>2</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>NORMANRMC*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/normanrmc/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/normanrmc/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;NORMANRMC_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;NORMANRMC_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a19-46a2-8098-3615d0885726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_PENNSTATE</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512951892454</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>PENNSTATE*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/pennstate/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/pennstate/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;PENNSTATE_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;PENNSTATE_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>13d75f15-2a19-46a2-8098-3615d0895726</id>
      <nextMetaDataId>5</nextMetaDataId>
      <name>FileMover_PREVEA</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512015596549</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/ProgramData/MySQL/MySQL Server 5.7/Uploads</host>
          <fileFilter>PREVEA*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>1000</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>DELIMITED</inboundDataType>
          <outboundDataType>DELIMITED</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
              <numberedRows>false</numberedRows>
              <ignoreCR>true</ignoreCR>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
              <columnDelimiter>,</columnDelimiter>
              <recordDelimiter>\n</recordDelimiter>
              <quoteToken>&quot;</quoteToken>
              <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
              <quoteEscapeToken>\</quoteEscapeToken>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
              <splitType>Record</splitType>
              <batchSkipRecords>0</batchSkipRecords>
              <batchMessageDelimiter></batchMessageDelimiter>
              <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
              <batchGroupingColumn></batchGroupingColumn>
              <batchScript></batchScript>
            </batchProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File to File </name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/prevea/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>Json File</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/phoenix/prevea/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;PREVEA_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>New Step</name>
                <script>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>var dt = new Date();  
var dtISOString = dt.toISOString();  
channelMap.put(&apos;isoDateSting&apos;, dtISOString);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64"></inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>3</metaDataId>
          <name>File to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.csv</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>4</metaDataId>
          <name>Json to Remote</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//proddtsincoming.nrch.us/DTSIncoming</host>
            <outputPattern>${originalFilename}.json</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>false</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>{
  &quot;OriginalFilename&quot;: &quot;${originalFilename}.csv&quot;,
  &quot;Uploader&quot;: &quot;PREVEA_HL7&quot;,
  &quot;UploadTime&quot;: &quot;${isoDateSting}&quot;
}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>DELIMITED</inboundDataType>
            <outboundDataType>DELIMITED</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedSerializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
                <numberedRows>false</numberedRows>
                <ignoreCR>true</ignoreCR>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedDeserializationProperties" version="3.4.2">
                <columnDelimiter>,</columnDelimiter>
                <recordDelimiter>\n</recordDelimiter>
                <quoteToken>&quot;</quoteToken>
                <escapeWithDoubleQuote>true</escapeWithDoubleQuote>
                <quoteEscapeToken>\</quoteEscapeToken>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.delimited.DelimitedBatchProperties" version="3.4.2">
                <splitType>Record</splitType>
                <batchSkipRecords>0</batchSkipRecords>
                <batchMessageDelimiter></batchMessageDelimiter>
                <batchMessageDelimiterIncluded>false</batchMessageDelimiterIncluded>
                <batchGroupingColumn></batchGroupingColumn>
                <batchScript></batchScript>
              </batchProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>8</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>02d95eea-afb0-43c3-a81f-89eb9e3aa32d</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>Kalispell_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1512951928441</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>2</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50011</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress></responseAddress>
          <responsePort></responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>ToFile</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>//picondiapp01/DI-FTP/connectKalispellRegionalMedicalCenter10684</host>
            <outputPattern>hl7_Kalispell_${date.get(&apos;yyyyMdHms&apos;)}.dat</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>ToLocalFile</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>H:/hl7/out/archive/kalispell/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>hl7_Kalispell_${date.get(&apos;yyyyMdHms&apos;)}.dat</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-89d8887f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>MENIFEE_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1508107911648</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>1</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50014</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (Before processing)</responseVariable>
            <respondAfterProcessing>false</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/menifee/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;MENIFEE&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString()!= &apos;&apos;) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, &apos;NPI&apos;);
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString()!= &apos;&apos;) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, &apos;NPI&apos;);
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8RVBJQyBSRUdJU1RSQVRJT058RUhDfHx8MjAxNzA3MTAxNTAyMDR8QVNBUFJOMnxB
RFReQTAzfDIyNjgxfFB8Mi41CkVWTnxBMDN8MjAxNzA3MTAxNTAyMDR8fEFEVF9FVkVOVHxBU0FQ
Uk4yXkFTQVBeTlVSU0VeVFdPXl5eXl5DSEFeXl5eXkxHU0JSfDIwMTcwNzEwMTUwMTAwClBJRHwx
fDI5ODE4MTV8QzExNTA5fHxVQ15EUkFYfHwyMDA4MDcwN3xNfHwxNXwyODAwIENFTlRVUlkgUEtX
WV5eQVRMQU5UQV5HQV4zMDM0NV5VU15eXkRFS0FMQnxERUtBTEJ8KDc3MCk1NTUtMTIxMl5eN3x8
RXxTfHw2MDIzMTc3Nzd8fHx8REVDTElORUR8fE58fFlFU3x8fHxOClBWMXwxfE98U0JJQ15TQklD
XjAxXkVIQ3xYfHx8QVNQTUQ2XkFTQVBeTUReU0lYfDQwNzM0Nl5CRU5BWU9VTl5KT0FOQV5JfHxJ
TUN8fHx8Uk18fHx8fDMxMjg0NDM3fENNfHx8fHx8fHx8fHx8fHx8fEFIUnx8fHx8fHx8MjAxNzA3
MTAxMzIzMjF8MjAxNzA3MTAxNTAxMDAKUFYyfHx8fHx8fHx8fHx8M3x8fHx8fHx8fHxOfHx8fHx8
fHx8fHx8fHx8fFdBTEsgSU4KREcxfDF8SUNELTEwLUNNfEowMi4wXlN0cmVwdG9jb2NjYWwgcGhh
cnluZ2l0aXNeSUNELTEwLUNNfFN0cmVwdG9jb2NjYWwgcGhhcnluZ2l0aXM=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A13 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A13&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A13&apos;) ) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-88d8557f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>METROHEALTH_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1513213810516</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>4</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50008</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (Before processing)</responseVariable>
            <respondAfterProcessing>false</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>10000</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>20</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/metrohealth/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;METROHEALTH&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

channelMap.put(&apos;service_indicator01&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;ID2&apos;) ) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     if(msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].length()==1){
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     } else if (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].length()&gt;1){
     	channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][0][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][0][&apos;PV1.36.1&apos;].toString());

if(msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));
}
if(msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() !=null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));
}

if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

channelMap.put(&apos;service_indicator01&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;ID2&apos;) ) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     if(msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].length()==1){
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     } else if (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].length()&gt;1){
     	channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][0][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][0][&apos;PV1.36.1&apos;].toString());

if(msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));
}
if(msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() !=null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));
}

if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8RVBJQyBSRUdJU1RSQVRJT058RUhDfHx8MjAxNzA3MTAxNTAyMDR8QVNBUFJOMnxB
RFReQTAzfDIyNjgxfFB8Mi41CkVWTnxBMDN8MjAxNzA3MTAxNTAyMDR8fEFEVF9FVkVOVHxBU0FQ
Uk4yXkFTQVBeTlVSU0VeVFdPXl5eXl5DSEFeXl5eXkxHU0JSfDIwMTcwNzEwMTUwMTAwClBJRHwx
fDI5ODE4MTV8QzExNTA5fHxVQ15EUkFYfHwyMDA4MDcwN3xNfHwxNXwyODAwIENFTlRVUlkgUEtX
WV5eQVRMQU5UQV5HQV4zMDM0NV5VU15eXkRFS0FMQnxERUtBTEJ8KDc3MCk1NTUtMTIxMl5eN3x8
RXxTfHw2MDIzMTc3Nzd8fHx8REVDTElORUR8fE58fFlFU3x8fHxOClBWMXwxfE98U0JJQ15TQklD
XjAxXkVIQ3xYfHx8QVNQTUQ2XkFTQVBeTUReU0lYfDQwNzM0Nl5CRU5BWU9VTl5KT0FOQV5JfHxJ
TUN8fHx8Uk18fHx8fDMxMjg0NDM3fENNfHx8fHx8fHx8fHx8fHx8fEFIUnx8fHx8fHx8MjAxNzA3
MTAxMzIzMjF8MjAxNzA3MTAxNTAxMDAKUFYyfHx8fHx8fHx8fHx8M3x8fHx8fHx8fHxOfHx8fHx8
fHx8fHx8fHx8fFdBTEsgSU4KREcxfDF8SUNELTEwLUNNfEowMi4wXlN0cmVwdG9jb2NjYWwgcGhh
cnluZ2l0aXNeSUNELTEwLUNNfFN0cmVwdG9jb2NjYWwgcGhhcnluZ2l0aXM=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>false</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-8888-8888-bd68-60d8557f1496</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>MONITOR_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1507439849733</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>1</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>1200000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/Users/yyyhu/hl7/in/monitor</host>
          <fileFilter>monitor*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>NONE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>false</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>0</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;MONITOR&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length == 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
    	else if(phoneNumber.length == 12){
    	    areaCode = phoneNumber.substring(0,3);
    	    localNumber = phoneNumber.substring(4,7) + phoneNumber.substring(8,12) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; (phoneNumber.length &lt;12 || phoneNumber.length &gt; 13)) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     
     var p_status = $(&apos;processing_status&apos;);

     if(zip_mod!=null &amp;&amp; zip_mod!=&apos;&apos; &amp;&amp; !zip_mod.substring(0,5).match(&quot;^[0-9]+$&quot;)){
        p_status = &apos;e&apos;;
     }


	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, procedure_description, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;procedure_description&apos;)+ &quot;&apos;,&apos;&quot;+$(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;S14&apos; ){
     channelMap.put(&apos;attending_doctor_id&apos;,(msg[&apos;AIP&apos;][&apos;AIP.3&apos;][&apos;AIP.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;attending_doctor_last_name&apos;, (msg[&apos;AIP&apos;][&apos;AIP.3&apos;][&apos;AIP.3.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;attending_doctor_first_name&apos;, (msg[&apos;AIP&apos;][&apos;AIP.3&apos;][&apos;AIP.3.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;procedure_description&apos;, (msg[&apos;SCH&apos;][&apos;SCH.25&apos;][&apos;SCH.25.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     
}

if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());

channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

if (msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;S14&apos; ){
     channelMap.put(&apos;attending_doctor_id&apos;,(msg[&apos;AIP&apos;][&apos;AIP.3&apos;][&apos;AIP.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;attending_doctor_last_name&apos;, (msg[&apos;AIP&apos;][&apos;AIP.3&apos;][&apos;AIP.3.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;attending_doctor_first_name&apos;, (msg[&apos;AIP&apos;][&apos;AIP.3&apos;][&apos;AIP.3.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;procedure_description&apos;, (msg[&apos;SCH&apos;][&apos;SCH.25&apos;][&apos;SCH.25.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     
}

if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());

channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
Cg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>Emergency Department Epic</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;
   ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;
   ) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>Walgreen Clinic Epic</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI5&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI4&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNA&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNBG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG1&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI6&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI3&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI1&apos;
        
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI5&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI4&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNA&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNBG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG1&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNG2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI6&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI3&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;WGNI1&apos;
        
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>Physical Therapy  Rehab</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;S14&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,3) == &apos;RSM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;Hook FB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,3) == &apos;PTR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CRCC PT-N&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-OCC Ther&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-SPEECH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-W PTR&apos;
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;S14&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,3) == &apos;RSM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;Hook FB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,3) == &apos;PTR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;CRCC PT-N&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-OCC Ther&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-PT&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-SPEECH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-W PTR&apos;
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>3</sequenceNumber>
                <name>Sleep Center</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;SL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-SL&apos;
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;SL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;HSH-SL&apos;
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>4</sequenceNumber>
                <name>MedCheck</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,5) == &apos;MDCHK&apos;
      
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,5) == &apos;MDCHK&apos;
      
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>5</sequenceNumber>
                <name>Imaging</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,5) == &apos;NB&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,6) == &apos;ICN&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,6) == &apos;ICE&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,6) == &apos;ICS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,3) == &apos;MAM&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;MR&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,5) == &apos;PETCT&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,8) == &apos;CRCCS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,6) == &apos;CAR&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;XR&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;US&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;CRCC&apos;
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,5) == &apos;NB&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,6) == &apos;ICN&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,6) == &apos;ICE&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,6) == &apos;ICS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,3) == &apos;MAM&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;MR&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,5) == &apos;PETCT&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,8) == &apos;CRCCS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(3,6) == &apos;CAR&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;XR&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;US&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;CRCC&apos;
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>6</sequenceNumber>
                <name>Worksite Care Clinics</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;cwcc&apos;
      
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;cwcc&apos;
      
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>7</sequenceNumber>
                <name>Offsite Care Clinics</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;icp&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IGC&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;infhptm&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,3) == &apos;IHS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IISBA&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IHSBTW&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;iltshwlecc&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IMCCSC&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;INSEHS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IWTHCC&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;INFKHSC&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;ANDERSON UHS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;UINDY WELL&apos;
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;icp&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IGC&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;infhptm&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,3) == &apos;IHS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IISBA&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IHSBTW&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;iltshwlecc&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IMCCSC&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;INSEHS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;IWTHCC&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,2) == &apos;INFKHSC&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;ANDERSON UHS&apos;
      ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;UINDY WELL&apos;
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>8</sequenceNumber>
                <name>Infusion</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;INF-&apos;
 
         )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;    
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;
    || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString().slice(0,4) == &apos;INF-&apos;
 
         )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>2</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-8889-bd68-89d8888f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>NORMANRMC_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1510351341395</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50012</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (Before processing)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/normanrmc/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;NORMANRMC&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 12){  
    	    areaCode = phoneNumber.substring(0,3);
    	    localNumber = phoneNumber.substring(4,7) + phoneNumber.substring(8,12) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;12) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));

channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  
	    (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)  ||
	    (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;XX&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));

channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  
	    (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)  ||
	    (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;XX&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">RVZOfEEwNnwyMDE3MDkxODE0NTZ8fHwxNzgwNV5TSFJPWUVSXkRFU0lSRUVeXl5eXl5eXl5eWFh8
MjAxNzA5MTgxNDU1fApQSUR8MXxOUlJMMDE0NzYyOXxFMDAwNTc4ODkxfEUyNzg0NjJ8Q0FSTFNP
Tl5URVJFU0FeR3x8MTk2MjExMjZ8Rnx8Q0F8ODQ1MSAxNDlUSCBTVF5eTk9CTEVeT0teNzMwNjh8
T0swMjd8NDA1LTI2OC00MjE5Xl5eTk8gRU1BSUwgMDkvMTgvMTd8MDAwLTAwMC0wMDAwfHxTfE5P
fE4wMDg4MDk3NjMxMXw1NjQtMTctNTMyOHwKTksxfDF8RklTSEVSXk1JU1RZfENIXjE5IFNPTiBP
UiBEQVVHSFRFUnw4NDUxIDE0OVRIIFNUXl5OT0JMRV5PS143MzA2OHw0MDUtOTIxLTgxOTF8fE5P
S3wKTksxfDJ8Tk9eT05FfE9SXkc4IE9USEVSIFJFTEFUSU9OU0hJUHx8fHxOT1R8Ck5LMXwzfFVO
fHxOQV5OQV5OQV5OQV4wMDAwMHx8MDAwLTAwMC0wMDAwfEVNUHx8fHx8fFVORU1QTE9ZRUR8fHx8
fHx8fHx8fHx8fHx8fHx8fHxVTnwKUFYxfDF8SXxORVJJUF5ORVIyMV4xfEVSfHxORVJ8UEFOVEJF
XlBhbnRlcl5CZW5qYW1pbl5JXl5eTUReXl5eXl5YWHx8fEhPTnx8fHxQSFl8fFl8UEFOVEJFXlBh
bnRlcl5CZW5qYW1pbl5JXl5eTUReXl5eXl5YWHxJTnx8U1B8fHx8fHx8fHx8fHx8fHx8fHx8TlJI
fHxBRE18fHwyMDE3MDkxODE0NTV8fHx8fHx8fFpaVkFSRk1eTWVkaWNpbmVeVmFyaWV0eV5DYXJl
IEZhbWlseV5eXl5eXl5eXlhYfApQVjJ8fE1FRF5NRUQvU1VSR3xUSUIvRklCIEZYfHx8fHx8fHwx
fHx8fHx8fHx8fHx8fHxFUnx8fHx8fHx8fHx8TnwKQUwxfDF8TUF8Ml4qVklQLU1SU0F8U1Z8SVNP
TEFUSU9OIFJFUVVJUkVEfDIwMTcwOTE4fApBTDF8MnxEQXxGMDAxOTAwMzg4Xk5vIEtub3duIEFs
bGVyZ2llc3x8VU5LTk9XTnwyMDE3MDkxOHwKR1QxfDF8fENBUkxTT05eVEVSRVNBXkd8fDg0NTEg
MTQ5VEggU1ReXk5PQkxFXk9LXjczMDY4fDQwNS0yNjgtNDIxOXx8fHx8U1B8NTY0LTE3LTUzMjh8
fHx8VU58TkFeTkFeTkFeTkFeMDAwMDB8MDAwLTAwMC0wMDAwfApJTjF8MXxTUHx8U0VMRiBQQVl8
fHx8fHx8VU58fHx8fENBUkxTT05eVEVSRVNBXkd8U1B8MTk2MjExMjZ8ODQ1MSAxNDlUSCBTVF5e
Tk9CTEVeT0teNzMwNjh8fHx8fHx8fHx8MjAxNzA5MTh8U0hFMTYyMjV8fHx8fHx8fHx8fHxVTl4z
IFVORU1QTE9ZRUR8RnxeXk5BfFFVRVVFRHwKSU4yfDF8NTY0LTE3LTUzMjh8fHx8fHx8fHx8fHx8
fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8Q0F8U3x8fHx8fHx8fHx8fHx8fHx8fHx8NDA1LTI2
OC00MjE5fApVQjJ8MXx8fHx8fDA1XjIwMTcwOTE4fApBQ0N8MjAxNzA5MTh8MDV8T0t8</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp; 
    (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HWPBCC&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;NRAD&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HRAD&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;MRAD&apos; )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) &amp;&amp; 
    (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HWPBCC&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;NRAD&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HRAD&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;MRAD&apos; )) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
    (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;NER&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HER&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;MER&apos; )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp;
    (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;NER&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HER&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;MER&apos; )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp;
	(msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HWPBCC&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;NRAD&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HRAD&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;MRAD&apos; )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp;
	(msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HWPBCC&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;NRAD&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;HRAD&apos; ||
     msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()== &apos;MRAD&apos; )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-5555-4389-bd68-88d8557f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>OSU0523_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1511984664235</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>1</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50027</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (Before processing)</responseVariable>
            <respondAfterProcessing>false</respondAfterProcessing>
            <processBatch>false</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>10000</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>20</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/metrohealth/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;METROHEALTH&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

channelMap.put(&apos;service_indicator01&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;ID2&apos;) ) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     if(msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].length()==1){
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     } else if (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].length()&gt;1){
     	channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][0][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][0][&apos;PV1.36.1&apos;].toString());

if(msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));
}
if(msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() !=null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));
}

if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.2&apos;][&apos;PV1.2.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

channelMap.put(&apos;service_indicator01&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;ID2&apos;) ) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}else{
		channelMap.put(&apos;attending_doctor_id&apos;, &apos;&apos;);
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     if(msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].length()==1){
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     } else if (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].length()&gt;1){
     	channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][0][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][0][&apos;PV1.36.1&apos;].toString());

if(msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));
}
if(msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() !=null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));
}

if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8RVBJQyBSRUdJU1RSQVRJT058RUhDfHx8MjAxNzA3MTAxNTAyMDR8QVNBUFJOMnxB
RFReQTAzfDIyNjgxfFB8Mi41CkVWTnxBMDN8MjAxNzA3MTAxNTAyMDR8fEFEVF9FVkVOVHxBU0FQ
Uk4yXkFTQVBeTlVSU0VeVFdPXl5eXl5DSEFeXl5eXkxHU0JSfDIwMTcwNzEwMTUwMTAwClBJRHwx
fDI5ODE4MTV8QzExNTA5fHxVQ15EUkFYfHwyMDA4MDcwN3xNfHwxNXwyODAwIENFTlRVUlkgUEtX
WV5eQVRMQU5UQV5HQV4zMDM0NV5VU15eXkRFS0FMQnxERUtBTEJ8KDc3MCk1NTUtMTIxMl5eN3x8
RXxTfHw2MDIzMTc3Nzd8fHx8REVDTElORUR8fE58fFlFU3x8fHxOClBWMXwxfE98U0JJQ15TQklD
XjAxXkVIQ3xYfHx8QVNQTUQ2XkFTQVBeTUReU0lYfDQwNzM0Nl5CRU5BWU9VTl5KT0FOQV5JfHxJ
TUN8fHx8Uk18fHx8fDMxMjg0NDM3fENNfHx8fHx8fHx8fHx8fHx8fEFIUnx8fHx8fHx8MjAxNzA3
MTAxMzIzMjF8MjAxNzA3MTAxNTAxMDAKUFYyfHx8fHx8fHx8fHx8M3x8fHx8fHx8fHxOfHx8fHx8
fHx8fHx8fHx8fFdBTEsgSU4KREcxfDF8SUNELTEwLUNNfEowMi4wXlN0cmVwdG9jb2NjYWwgcGhh
cnluZ2l0aXNeSUNELTEwLUNNfFN0cmVwdG9jb2NjYWwgcGhhcnluZ2l0aXM=</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>5</pruneMetaDataDays>
        <archiveEnabled>false</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-60d8557f1488</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>PENN_STATE_FILE</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1501364270047</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>5</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>30000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/Users/yyyhu/hl7/in/pennstate</host>
          <fileFilter>*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>MOVE</errorResponseAction>
          <errorMoveToDirectory>C:/Users/yyyhu/hl7/in/pennstate/processed</errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>100</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/pennstate</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;PENNSTATE&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
     
     if(phoneNumber.length &gt;= 12){
     
         areaCode = phoneNumber.substring(0,3);
         localNumber = phoneNumber.substring(4,7) + phoneNumber.substring(8,12) ;
     }
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;12) {
         localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }


	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;
	         || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() != &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;
	         || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() != &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
Cg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>St. Joseph Strausstown </name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp; 
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADSTRA&apos;)) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp; 
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADSTRA&apos;)) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>Downtown Campus</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCLAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCWC&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCLAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCWC&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>Medical Office Building</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DRO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJMO&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DRO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJMO&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>3</sequenceNumber>
                <name>St. Joseph Maidencreek</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMAID&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADMAID&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMAID&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADMAID&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>4</sequenceNumber>
                <name>St. Joseph Muhlenberg</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DLMUHL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADMUHL&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DLMUHL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADMUHL&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>5</sequenceNumber>
                <name>St. Joseph Spring Ridge</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DSPR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADSPR2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BIW&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DWCW&apos;
  
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DSPR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADSPR2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BIW&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DWCW&apos;
  
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>6</sequenceNumber>
                <name>St. Joseph Exeter Ridge Health Complex</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DEXRG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADEX&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DEXRG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADEX&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>7</sequenceNumber>
                <name>ST JOSEPH MEDICAL CENTER</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DLAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DVDS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCVL&apos;
  
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp;
   (msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DLAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DVDS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCVL&apos;
  
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>true</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>true</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>2</pruneMetaDataDays>
        <pruneContentDays>2</pruneContentDays>
        <archiveEnabled>false</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-60d8557f1498</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>PENN_STATE_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1510617958354</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>8</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50005</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress></responseAddress>
          <responsePort></responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/pennstate/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;PENNSTATE&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
     
     if(phoneNumber.length &gt;= 12){
     
         areaCode = phoneNumber.substring(0,3);
         localNumber = phoneNumber.substring(4,7) + phoneNumber.substring(8,12) ;
     }
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;12) {
         localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }


	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;  
	         || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() != &apos;HOME&apos;){
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.1&apos;].length() == 0){
		    channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.1&apos;].length()&gt;0){
		    channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.2&apos;].length()==0){
		    if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].length()==0){
		        channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		    }else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].length()&gt;0){
			   channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		    }
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     if (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString() != null){
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }else{
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	if  (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString() != null){
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }else{
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;  
	         || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() != &apos;HOME&apos;){
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.1&apos;].length() == 0){
		    channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.1&apos;].length()&gt;0){
		    channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;][&apos;PID.11.1.2&apos;].length()==0){
		    if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].length()==0){
		        channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		    }else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].length()&gt;0){
			   channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		    }
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     if (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString() != null){
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }else{
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	if  (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString() != null){
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;][&apos;IN1.4.1.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }else{
         channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     }
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8SUlNfFNKUnxBRFRJTVBBQ3xJbXBhY3wyMDE3MDYyNjA5MzB8fEFEVF5BMDN8QURU
NjAyNjczMTgwfFB8Mi4zfHx8fHx8DUVWTnxBMDN8MjAxNzA2MjYwOTMwfHx8DVBJRHwxfHxEMDUx
MDEzNHx8S0VFTkVSXktFSVRIXkFMQU58SlVESVRIfDE5NjYxMTE1fE18fFd8MTQ0IENBTVBTSVRF
IFJEXl5CRVJOVklMTEVeUEFeMTk1MDZ8fDYxMC00ODgtMTQ4MX40ODQtMzg4LTE4Njl8fEVOR3xN
fExVVHxEMDc2MzQzMzAwfHx8fDB8fHx8fHx8DU5LMXwxfEtFRU5FUl5MSUxMSUFOXk18U1B8MTQ0
IENBTVBTSVRFIFJEXl5CRVJOVklMTEVeUEFeMTk1MDZ8NjEwLTQ4OC0xNDgxfDQ4NC01OTktMTcx
OHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fA1OSzF8Mnx8fHx8fEV8fHx8fHxVTkVNUExP
WUVEfHx8fHx8fHx8fHx8fHx8fHx8fHx8fHwNUFYxfDF8UnxTSk1PXl5eU0pSfEVMfHx8Uk9WTUFS
XlJvdml0b15NYXJjXkF8fF5eXl5+fkZJQ1JPU15GaWNodGhvcm5eUm9zc15IXnx8fHx8UEhSfHx8
fFJDUnx8TUNSfHx8fHx8fHx8fHx8fHx8fHx8fFNKUnx8RElTIFJDUnx8fDIwMTcwNjA1MTExMnwy
MDE3MDYyNnx8fHx8fA1ERzF8MXx8QzkxLjEwXl5JOXx8fHx8fHx8fHx8fHx8fA1ERzF8Mnx8RDcw
LjJeXkk5fHx8fHx8fHx8fHx8fHx8DURHMXwzfHxENjQuODFeXkk5fHx8fHx8fHx8fHx8fHx8DURH
MXw0fHxENjguOF5eSTl8fHx8fHx8fHx8fHx8fHwNREcxfDV8fEQ4MC4xXl5JOXx8fHx8fHx8fHx8
fHx8fA1ERzF8Nnx8UjU5LjleXkk5fHx8fHx8fHx8fHx8fHx8DURHMXw3fHxSNTMuODFeXkk5fHx8
fHx8fHx8fHx8fHx8DURHMXw4fHxHODkuM15eSTl8fHx8fHx8fHx8fHx8fHwNREcxfDl8fFI1Ml5e
STl8fHx8fHx8fHx8fHx8fHwNREcxfDEwfHxNMjUuNTBeXkk5fHx8fHx8fHx8fHx8fHx8DURHMXwx
MXx8VDgyLjg2OEFeXkk5fHx8fHx8fHx8fHx8fHx8DURHMXwxMnx8RTg2LjBeXkk5fHx8fHx8fHx8
fHx8fHx8DUdUMXwxfHxLRUVORVJeS0VJVEheQXx8MTQ0IENBTVBTSVRFIFJEXl5CRVJOVklMTEVe
UEFeMTk1MDZ8NjEwLTQ4OC0xNDgxfHx8fHxTfDIxNC05Ni02ODA5fHx8fFVORU1QTE9ZRUR8fHx8
fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fA1JTjF8MXxETUNSfHxNRURJQ0FSRSBQ
QVJUIEEgJiBCfE5PVklUQVMgU09MVVRJT05TXjE4MDAgQ0VOVEVSIFNUUkVFVF5DQU1QIEhJTExe
UEFeMTcwODl8fDg3Ny0yMzUtODA3M3x8fHxEVUV8MjAxNTEyMDF8fE5OfHxLRUVORVJeS0VJVEhe
QUxBTnxTfHwxNDQgQ0FNUFNJVEUgUkReXkJFUk5WSUxMRV5QQV4xOTUwNnx8fHx8fHx8fHx8fHx8
fHx8MjE0OTY2ODA5QXx8fHx8fHx8fHx8fA1JTjF8MnxEQ09NTTF8fENPTU1FUkNJQUwgLSBPVEhF
UiAxfFBPIEJPWCA1MDA4Xl5CUkVOVFdPT0ReVE5eMzcwMjR8fDg4OC02MjQtNjI5MHxQTEFOIEd8
fHxEVUV8MjAxNTEyMDF8fE5OfHxLRUVORVJeS0VJVEheQUxBTnxTfHwxNDQgQ0FNUFNJVEUgUkRe
XkJFUk5WSUxMRV5QQV4xOTUwNnx8fHx8fHx8fHx8fHx8fHx8QUhMMzAyMzQ5N3x8fHx8fHx8fHx8
fA==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>St. Joseph Strausstown </name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))
   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADSTRA&apos;)) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))
   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADSTRA&apos;)) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>Downtown Campus</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))
   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCLAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCWC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DHBO&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))
   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCLAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCCWC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DHBO&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>Medical Office Building</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DRO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJMO&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DRO&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;SJMO&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>3</sequenceNumber>
                <name>St. Joseph Maidencreek</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMAID&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADMAID&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DMAID&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADMAID&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>4</sequenceNumber>
                <name>St. Joseph Muhlenberg</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DLMUHL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADMUHL&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DLMUHL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADMUHL&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>5</sequenceNumber>
                <name>St. Joseph Spring Ridge</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DSPR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADSPR2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BIW&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DWCW&apos;
  
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DSPR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADSPR2&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BIW&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DWCW&apos;
  
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>6</sequenceNumber>
                <name>St. Joseph Exeter Ridge Health Complex</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DEXRG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADEX&apos;
 
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DEXRG&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;RADEX&apos;
 
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>7</sequenceNumber>
                <name>ST JOSEPH MEDICAL CENTER</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DLAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DVDS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCVL&apos;
  
        )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if(((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos; &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() != &apos;REG RCR&apos;) ||
   ((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos; || msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  &amp;&amp;
   	msg[&apos;PV1&apos;][&apos;PV1.41&apos;][&apos;PV1.41.1&apos;].toString() == &apos;REG REF&apos;))

   
   &amp;&amp;
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DLAB&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DRAD&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DVDS&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;DCVL&apos;
  
        )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>true</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>true</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>8</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-60d8557f8898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>PREVEA_FILE</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1501364134696</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>5</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>5000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>C:/Users/yyyhu/hl7/in/prevea</host>
          <fileFilter>*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>DELETE</afterProcessingAction>
          <moveToDirectory></moveToDirectory>
          <moveToFileName></moveToFileName>
          <errorReadingAction>MOVE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory>C:/Users/yyyhu/hl7/in/prevea/processed</errorMoveToDirectory>
          <errorMoveToFileName>${originalFilename}</errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>0</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/prevea</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;PREVEA&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
Cg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    msg[&apos;EVN&apos;][&apos;EVN.4&apos;][&apos;EVN.4.1&apos;].toString() == &apos;APPT_CHECK_IN&apos;) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;)  ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>8</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-60d8557f1898</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>PREVEA_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1503034410797</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>16</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50006</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>h:/hl7/out/archive/prevea/${date.get(&apos;yyyyMMdd&apos;)}</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}_${mirth_type}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var customer_id = &apos;PREVEA&apos;;
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = (&apos;&apos;+$(&apos;primary_phone_number&apos;)).trim();
   
     if(phoneNumber.length &gt;= 13){  
    	    areaCode = phoneNumber.substring(1,4);
    	    localNumber = phoneNumber.substring(5,8) + phoneNumber.substring(9,13) ;
    	}
     else if(phoneNumber.length &gt;=7 &amp;&amp; phoneNumber.length &lt;13) {
    	    localNumber = phoneNumber.substring(0,7);
     }
     

     var zip_mod = &apos;&apos;;
     var zipString = (&apos;&apos;+$(&apos;zip&apos;)).trim();
     
     if(zipString.length &lt;= 10){
         zip_mod = zipString;
     }else{
         zip_mod = zipString.substring(0,5);
     }
     
     var p_status = $(&apos;processing_status&apos;);

     if(zip_mod!=null &amp;&amp; zip_mod!=&apos;&apos; &amp;&amp; !zip_mod.substring(0,5).match(&quot;^[0-9]+$&quot;)){
        p_status = &apos;e&apos;;
     }


	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, customer_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, procedure_description, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+customer_id +&quot;&apos;, &apos;&quot;+ 
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ zip_mod + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;procedure_description&apos;)+&quot;&apos;, &apos;&quot;+p_status+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos; || msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.3&apos;].toString()== &apos;Internet&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][0][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;procedure_description&apos;, msg[&apos;PV1&apos;][&apos;PV1.51&apos;][&apos;PV1.51.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; || msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-mail&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else{
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.13&apos;].length();i++){
	if((msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.2&apos;].toString()== &apos;NET&apos; || msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.3&apos;].toString()== &apos;Internet&apos;)
	    &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][i][&apos;PID.13.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString() !=null &amp;&amp; msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][0][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14));

channelMap.put(&apos;discharge_timestamp&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()+ &apos;00000000000000&apos;).slice(0,14));


if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  $(&apos;admit_timestamp&apos;));
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;procedure_description&apos;, msg[&apos;PV1&apos;][&apos;PV1.51&apos;][&apos;PV1.51.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8RVBJQ3xQUkVWfEhTSFN8SFNIU3wyMDE3MDcxODE5MDkzOHwyMzg4MHxBRFReQTA0
fDg4OTM3Njk0fFB8Mi4yCkVWTnxBMDR8MjAxNzA3MTgxOTA5Mzh8fEFQUFRfQ0hFQ0tfSU58MjM4
ODBeU0NITkVJREVSXkpBTUlFXkxeXl5eXlBDXl5eXl5LV1IKUElEfDF8RTkwNTQ0Ml5eXl5FUEl+
NTU0NzUxOTVeXl5eTVJOfjAwODg4ODkzXl5eXlNWTVJOfkExNTA3ODdeXl5HQk9NUk5eR0JPfDU1
NDc1MTk1Xl5eXk1STnx8U0VJTEVSXlBFR0dZXkx8fDE5NTMwMjA2fEZ8U0VJTEVSXlBFR0dZfFd8
OTI3IE1JTExFUiBTVFJFRVQgQVBUIDE0Xl5LRVdBVU5FRV5XSV41NDIxNl5VU15NXl5LRVdBVU5F
RXxLRVdBfCg1MDgpNjUyLTcyNDJeXjdeXl41MDheNjUyNzI0Mn5eTkVUXkludGVybmV0XmxlZ3Mw
MjA2QHlhaG9vLmNvbX4oNTA4KTY1Mi03MjQyXl4xXl5eNTA4XjY1MjcyNDJ8KDk5OSk5OTktOTk5
OV5eOF5eXjk5OV45OTk5OTk5fEVOR0xJU0h8RHxNRVR8NjA2MDAxMzJ8fHx8Tk9UfHx8fHx8fHxO
ClBEMXx8fFNUIFZJTkNFTlQgSE9TUElUQUwgR1JFRU4gQkFZXl45MjF8MTY0OTI4MjUxOF5QT1dF
TExeS1JJU1RFTl5BXl5eXl5eXl5eRVdEUFJPVgpQVjF8MXxPfEtXUkZQXl5eUFJFVl5eXlBSRVZ8
fHx8MTA4Mzk2MDgzNV5XRUdORVJCVVJOU15MQVVSSUVeU15eXl5eXl5eXk5QSXx8fEhTSHx8fHx8
fHwxMDgzOTYwODM1XldFR05FUkJVUk5TXkxBVVJJRV5TXl5eXl5eXl5eTlBJfDN8NjA2MDAxMzJ8
Q0FJRHx8fHx8fHx8fHx8fHx8fHx8fHx8fHxeXl5QUkVWfHwyMDE3MDcxODE5MDkzNXwyMDE3MDcx
ODE5MDkzNQpQVjJ8fHx8fHx8fHx8fHx8fHx8fHx8fHx8TgpJTjF8MXwxMDEzOXwyMDA4fEVEUy9N
RURJQ0FJRHwzMTMgQkxFVFRORVIgQkxWRF5eTUFESVNPTl5XSV41Mzc4NHx8KDgwMCk5NDctOTYy
N15eXl5eODAwXjk0Nzk2Mjd8fHx8fDIwMTYxMDAxfHx8fFNFSUxFUl5QRUdHWV5MfFNlfDE5NTMw
MjA2fDkyNyBNSUxMRVIgU1RSRUVUIEFQVCAxNF5eS0VXQVVORUVeV0leNTQyMTZeVVNeXl5LRVdB
VU5FRXx8fDIqfHx8WUV8fHx8fHx8fHx8MjM2MjcyOHw0NDMxNTMzMTQxfHx8fHx8UmV0aXJlZHxG
fF5eXl5eVVN8fHxCT1RI</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>A08 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
		return true
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A08&apos;) ) {
		return true
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>A03 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
              <rule>
                <sequenceNumber>2</sequenceNumber>
                <name>A04 Event</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14) &lt; DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;)
    ) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A04&apos;) &amp;&amp; 
    (msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString() + &apos;00000000000000&apos;).slice(0,14) &lt; DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;)
    ) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>PRODUCTION</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <pruneMetaDataDays>8</pruneMetaDataDays>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>b1310798-e1ff-461e-aa43-50b85514329b</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>SWGH_File</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1492983406345</time>
        <timezone>America/Los_Angeles</timezone>
      </lastModified>
      <revision>4</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.file.FileReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <pollConnectorProperties version="3.4.2">
            <pollingType>INTERVAL</pollingType>
            <pollOnStart>false</pollOnStart>
            <pollingFrequency>20000</pollingFrequency>
            <pollingHour>0</pollingHour>
            <pollingMinute>0</pollingMinute>
            <cronJobs/>
            <pollConnectorPropertiesAdvanced>
              <weekly>true</weekly>
              <inactiveDays>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
                <boolean>false</boolean>
              </inactiveDays>
              <dayOfMonth>1</dayOfMonth>
              <allDay>true</allDay>
              <startingHour>8</startingHour>
              <startingMinute>0</startingMinute>
              <endingHour>17</endingHour>
              <endingMinute>0</endingMinute>
            </pollConnectorPropertiesAdvanced>
          </pollConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>None</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>false</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <scheme>FILE</scheme>
          <host>c:/users/yyyhu/hl7/in</host>
          <fileFilter>*</fileFilter>
          <regex>false</regex>
          <directoryRecursion>false</directoryRecursion>
          <ignoreDot>true</ignoreDot>
          <anonymous>true</anonymous>
          <username>anonymous</username>
          <password>anonymous</password>
          <timeout>10000</timeout>
          <secure>true</secure>
          <passive>true</passive>
          <validateConnection>true</validateConnection>
          <afterProcessingAction>MOVE</afterProcessingAction>
          <moveToDirectory>c:/users/yyyhu/hl7/in/processed</moveToDirectory>
          <moveToFileName>${originalFilename}_${SYSTIME}</moveToFileName>
          <errorReadingAction>NONE</errorReadingAction>
          <errorResponseAction>AFTER_PROCESSING</errorResponseAction>
          <errorMoveToDirectory></errorMoveToDirectory>
          <errorMoveToFileName></errorMoveToFileName>
          <checkFileAge>true</checkFileAge>
          <fileAge>1000</fileAge>
          <fileSizeMinimum>0</fileSizeMinimum>
          <fileSizeMaximum></fileSizeMaximum>
          <ignoreFileSizeMaximum>true</ignoreFileSizeMaximum>
          <sortBy>date</sortBy>
          <binary>false</binary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>File Reader</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>WriteToFile</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>c:/users/yyyhu/hl7/out</host>
            <outputPattern>${date.get(&apos;yyyy-M-d H.m.s&apos;)}${SYSTIME}_${UUID}</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.rawData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>WriteToMySQL</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:port:3306/l7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = $(&apos;primary_phone_number&apos;).trim();
     if (phoneNumber.length() == 12){
     	areaCode = phoneNumber.substring(1,4);
     	localNumber = phoneNumber.substring(5,12);
     }else if((phoneNumber.length() &gt;=7)) {
     	localNumber = phoneNumber.substring(0,7);
     }


	
	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; + 
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ $(&apos;zip&apos;) + &quot;&apos; ,&apos;&quot; + 
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+ 
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+ 
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());
	
	var result = dbConn.executeUpdate(queryString);

 
   

}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );
	
    throw (e);
}finally {
	if (dbConn) { 
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIxMjAzNDQxM3x8QURUXkEwM3xR
NTkwMTU5Njc1VDY2MzYyNDI5NFg1ODExNHx8Mi4zfHx8fHx8ODg1OS8xCkVWTnxBMDN8MjAxNzAy
MTIwMzQ0MDB8fHwyMDIwMTleQXNocmllbV5OZWRhbF5eUk5ec3MgLSA3NDc5Xl5eXl5eXlBSU05M
SUR+MjAyMDE5XkFzaHJpZW1eTmVkYWxeXlJOXnNzIC0gNzQ3OV5eXl5eXl5DRDoxMTQ5ODgxMzh+
MjAyMDE5XkFzaHJpZW1eTmVkYWxeXlJOXnNzIC0gNzQ3OV5eXkNEOjI4MzU1MzA1M15eXl5QZXJz
b25uZWwgQmFkZ2UgSUQKUElEfDF8NjI3MTY4fDYyNzE2OF5eXl5eQ0Q6MzU3MDJ8fFNNSVRIXlJB
WU1PTkReR3x8MTk0NDAxMTB8TXxTTUlUSF5SQVlNT05EXkd8V3wxMTEwNSBQTEVBU0FOVCBWQUxM
RVkgUkReUEVBUkwgVklFVyBSRUhBQiAmIFdFTExORVNTIENFTlRFUl5QQVJNQV5PSF40NDEzMF5V
U0FeSE9NRX5eXl5eXlVTQV5CSUxMfk5vIEVtYWlsIEFkZHJlc3NeXl5eXl5FLU1BSUx8fCgyMTYp
NTI0NjU3OV5Ib21lXlRlbHx8RU5HfFd8Q0F8NjI3MTY4MTQwN3wyODgzODg2Mjl8fHxOSHx8fDAK
UEQxfHx8fDQ3NTdeVllBU15DSElOTUFZXl5NRF5eXl5eXl5eQ09NTVVOSVRZIERSIE5CUgpaUEl8
MXx8fHx8fHx8fDQ3NTdeVllBU15DSElOTUFZXl5NRF5eXl5eXl5eQ09NTVVOSVRZIERSIE5CUgpa
RUl8MXw1fFJFVElSRUR8fHx8fHx8fDQ1MjUxMTd8fHx8fHwyMDAwMDEwMTAwMDAwMApQVjF8MXxF
fEJSRUReXl4wNzE3NF5eQkVEXkJNQ3wxfHxCUkVEXl5eMDcxNzReXl5CTUN8MTE5MF5IQVNUSU5H
U15PXk1BUkteTUReXl5BZG1pdHRpbmcgUGh5c2ljaWFuc15eXl5eQ09NTVVOSVRZIERSIE5CUn4x
ODMxMTQ2NDYzXkhBU1RJTkdTXk9eTUFSS15NRF5eXl5DRDo1NTE2MzMwMF5eXl5OYXRpb25hbCBQ
cm92aWRlciBJZGVudGlmaWVyfHx8RVJ8fHx8N3x8fHxFfDYyNzE2ODE0MDd8N3x8fHx8fHx8fHx8
fHx8fHxBR3x8fDA3MTc0fHxEfHx8MjAxNzAyMTIwMDQzMDB8MjAxNzAyMTIwMzQ0MDAKUFYyfHx8
XkZFVkVSOyBBTFRFUkVEIE1FTlRBTCBTVEFUVVN8fHx8fHx8MHx8fHx8fHx8fHx8WWVzfENEOjQ2
MHxeXjI0NDI0OTkKWlZJfHx8fHx8fHx8RHx8fHwyMDE3MDIxMjAxMzMwMHx8MjAxNzAyMTIwMDQ1
NDQKT0JYfDF8Q0R8RURfRlNJfHxOCk9CWHwyfENEfEFDQ1JFTEFURURWSXx8Tm8KT0JYfDN8Q0R8
RE9DVE9SU0VORHx8Q0Q6MTMxMTg1MTA0Ck9CWHw0fENEfFJFRy1DSEFQTE58fE4KT0JYfDV8Q0R8
UkVHLUNIVVJDSHx8TgpPQlh8NnxDRHxQUklWQUNZfHxZCk9CWHw3fENEfFBBVElFTlRQT1JUQXx8
Q0Q6MTMwMjg5NDU5Ck9CWHw4fERUfFBSSVZBQ1lEQVRFfHwyMDE1MTEyMDAwMDAwMApPQlh8OXxT
VHxURU1QLS1JTklUXlRFTVBFUkFUVVJFLS1JTklUSUFMfHwzNi42fHx8fHx8Rnx8fDIwMTcwMjEy
MDA1MwpPQlh8MTB8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHwyODI3NzN8
fHx8fHxGfHx8MjAxNzAyMTIwMzQ0CkRHMXwxfElDRC0xMC1DTXxCMzQuOV5WaXJhbCBpbmZlY3Rp
b24sIHVuc3BlY2lmaWVkfHwyMDE3MDIxMjAwMDB8V29ya2luZw==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>Filter ER Patient</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp; 
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BRED&apos; ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;EMER&apos;  )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp; 
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BRED&apos; ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;EMER&apos;  )) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>Filter Ambulatory Patient</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp; 
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHVR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBCARM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBENDO&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPBE&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPBR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBCCMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPNR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPST&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGENS&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBMEX&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGIP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGIMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GERO&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBONC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBIMSV&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBIMMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBNCSTV&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PMCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBVASMH&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBVASBR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHMH&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHST&apos; )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp; 
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHVR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBCARM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBENDO&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPBE&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPBR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBCCMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPNR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPST&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGENS&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBMEX&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGIP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGIMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GERO&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBONC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBIMSV&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBIMMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBNCSTV&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PMCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBVASMH&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBVASBR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHMH&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHST&apos; )) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>d9e33ee1-0322-4389-bd68-60d8557f1495</id>
      <nextMetaDataId>3</nextMetaDataId>
      <name>SWGH_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1493754263659</time>
        <timezone>America/Chicago</timezone>
      </lastModified>
      <revision>7</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50001</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress>127.0.0.1</responseAddress>
          <responsePort>22222</responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
          <outboundTemplate encoding="base64"></outboundTemplate>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_Depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>C:/users/yyyhu/hl7/out</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>pid</name>
                <script>var mapping;

try {
	mapping = msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString(); 
} catch (e) {
	logger.error(e);
	mapping = &apos;&apos;;
}

channelMap.put(&apos;pid&apos;, validate( mapping , 000000, new Array()));</script>
                <type>Mapper</type>
                <data>
                  <entry>
                    <string>Variable</string>
                    <string>pid</string>
                  </entry>
                  <entry>
                    <string>Mapping</string>
                    <string>msg[&apos;PID&apos;][&apos;PID.3&apos;][&apos;PID.3.1&apos;].toString()</string>
                  </entry>
                  <entry>
                    <string>DefaultValue</string>
                    <string>000000</string>
                  </entry>
                  <entry>
                    <string>RegularExpressions</string>
                    <list/>
                  </entry>
                  <entry>
                    <string>isGlobal</string>
                    <string>channel</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
        <connector version="3.4.2">
          <metaDataId>2</metaDataId>
          <name>mySQL_depot</name>
          <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <driver>com.mysql.jdbc.Driver</driver>
            <url>jdbc:mysql://localhost:3306/hl7app</url>
            <username>mirth</username>
            <password>mirth</password>
            <query>var dbConn;

try {
	var dateString = DateUtil.getCurrentDate(&apos;yyyyMMddHHmmss&apos;);
	var uuid = UUIDGenerator.getUUID();
	//var msg = (new String(connectorMessage.getRawData())).replace(/&apos;/g, &quot;\\&apos;&quot;);
	var msg = &apos;&apos;;
	var areaCode = &apos;&apos;;
	var localNumber= &apos;&apos;;
     var phoneNumber = $(&apos;primary_phone_number&apos;).trim();
     if (phoneNumber.length() == 12){
     	areaCode = phoneNumber.substring(1,4);
     	localNumber = phoneNumber.substring(5,12);
     }else if((phoneNumber.length() &gt;=7)) {
     	localNumber = phoneNumber.substring(0,7);
     }



	dbConn = DatabaseConnectionFactory.createDatabaseConnection(&apos;com.mysql.jdbc.Driver&apos;,&apos;jdbc:mysql://localhost:3306/hl7app&apos;,&apos;mirth&apos;,&apos;mirth&apos;);

	var queryString = &quot;INSERT INTO adt_msg_queue (msg_controlid, sending_facility_id, msg_send_timestamp, msg_type, system_timestamp, system_unique_id, &quot; +
	&quot; sending_facility_name, patient_external_id, patient_internal_id, mrn, patient_account_number, &quot; +
	&quot; patient_last_name , patient_first_name, patient_middle_name, patient_suffix, &quot; +
	&quot; primary_phone_number, area_code, local_number, secondary_phone_number, &quot;+
	&quot; email_address, address1, address2, city, state, zip, &quot; +
	&quot; gender, race, language, marital, dob, &quot; +
	&quot; visit_number, visit_type, visit_date, attending_doctor_id, attending_doctor_id_type,  &quot;+
	&quot; attending_doctor_last_name, attending_doctor_first_name, attending_doctor_middle_name, attending_doctor_suffix, attending_doctor_degree, &quot;+
	&quot; primary_payer_id, primary_payer_name, primary_plan_type, &quot; +
	&quot; primary_diagnosis, primary_diag_coding_system, primary_diag_description, &quot; +
	&quot; secondary_diagnosis, secondary_diag_coding_system, secondary_diag_description, &quot; +
	&quot; tertiary_diagnosis, tertiary_diag_coding_system, tertiary_diag_description, &quot; +
	&quot; location, admit_datetime, discharge_datetime, discharge_status, ethnic_group, &quot; +
	&quot; death_indicator, admit_source, processing_status, msg)&quot; +
	&quot;  VALUES (&apos;&quot;+$(&apos;msg_controlid&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;send_facility_id&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_send_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;msg_type&apos;)+&quot;&apos;, &apos;&quot;+dateString+&quot;&apos;, &apos;&quot;+uuid+&quot;&apos; , &apos;&quot;+
	$(&apos;sending_facility_name&apos;) + &quot;&apos;, &apos;&quot; + $(&apos;patient_external_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;patient_internal_id&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;mrn&apos;)+&quot;&apos; ,&apos;&quot; +$(&apos;patient_account_number&apos;)+&quot;&apos; , &apos;&quot;+
	$(&apos;patient_last_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_first_name&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;patient_middle_name&apos;)+&quot;&apos; , &apos;&quot;+ $(&apos;patient_suffix&apos;) + &quot;&apos;, &apos;&quot; +
	$(&apos;primary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +areaCode+&quot;&apos;,&apos;&quot; + localNumber + &quot;&apos;,&apos;&quot; + $(&apos;secondary_phone_number&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;email_address&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address1&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;address2&apos;)+&quot;&apos;, &apos;&quot; + $(&apos;city&apos;) +&quot;&apos;, &apos;&quot; + $(&apos;state&apos;) + &quot;&apos; ,&apos;&quot;+ $(&apos;zip&apos;) + &quot;&apos; ,&apos;&quot; +
	$(&apos;gender&apos;) +&quot;&apos;,&apos;&quot; + $(&apos;race&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;language&apos;) +&quot;&apos;,&apos;&quot;+ $(&apos;marital&apos;) + &quot;&apos;,&apos;&quot; + 	$(&apos;dob&apos;)+ &quot;&apos;,&apos;&quot;+
	$(&apos;visit_number&apos;)+&quot;&apos; , &apos;&quot;+$(&apos;visit_type&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;visit_date&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_id&apos;)+&quot;&apos;, &apos;&quot; +$(&apos;attending_doctor_id_type&apos;)+&quot;&apos;,&apos;&quot;+
	$(&apos;attending_doctor_last_name&apos;) +  &quot;&apos;, &apos;&quot;+$(&apos;attending_doctor_first_name&apos;)+&quot;&apos;,&apos;&quot;+$(&apos;attending_doctor_middle_name&apos;)+&quot;&apos;, &apos;&quot;+ $(&apos;attending_doctor_suffix&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;attending_doctor_degree&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_payer_id&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_payer_name&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_plan_type&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;primary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;primary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;secondary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;secondary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;tertiary_diagnosis&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_coding_system&apos;) + &quot;&apos;,&apos;&quot; + $(&apos;tertiary_diag_description&apos;) + &quot;&apos;,&apos;&quot; +
	$(&apos;location&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;admit_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_timestamp&apos;)+&quot;&apos;, &apos;&quot;+$(&apos;discharge_status&apos;)+&quot;&apos;,&apos;&quot;+ $(&apos;ethnic_group&apos;) +&quot;&apos;,&apos;&quot;+
	$(&apos;death_indicator&apos;)+&quot;&apos;,&apos;&quot; + $(&apos;admit_source&apos;)+ &quot;&apos;,&apos;&quot;+ $(&apos;processing_status&apos;)+&quot;&apos;, &apos;&quot;+msg+&quot;&apos;)&quot;

	//logger.debug(&quot;phoneNumber = &quot; + phoneNumber + &quot;length= &quot; + phoneNumber.length());

	var result = dbConn.executeUpdate(queryString);




}catch(e){
    logger.error($(&apos;Channel Name&apos;) + $(&apos;send_facility_id&apos;) + $(&apos;msg_controlid&apos;) +  dateString + e );

    throw (e);
}finally {
	if (dbConn) {
		dbConn.close();
	}
}</query>
            <useScript>true</useScript>
          </properties>
          <transformer version="3.4.2">
            <steps>
              <step>
                <sequenceNumber>0</sequenceNumber>
                <name>map_variables</name>
                <script>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</script>
                <type>JavaScript</type>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>channelMap.put(&apos;msg_controlid&apos;,msg[&apos;MSH&apos;][&apos;MSH.10&apos;][&apos;MSH.10.1&apos;].toString());

if(msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != null &amp;&amp; msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;MSH&apos;][&apos;MSH.4&apos;][&apos;MSH.4.1&apos;].toString());
} else if (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString() != &apos;&apos;) {
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.7&apos;].toString());
}else if (msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != null &amp;&amp; msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() != &apos;&apos;){
    channelMap.put(&apos;send_facility_id&apos;,msg[&apos;PV1&apos;][&apos;PV1.39&apos;][&apos;PV1.39.1&apos;].toString() );
}else if (msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString()!= null &amp;&amp; msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString() != &apos;&apos;){
	channelMap.put(&apos;send_facility_id&apos;, msg[&apos;PV2&apos;][&apos;PV2.23&apos;][&apos;PV2.23.1&apos;].toString());;
}

channelMap.put(&apos;msg_send_timestamp&apos;,msg[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;MSH.7.1&apos;].toString());
channelMap.put(&apos;msg_type&apos;, msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString());

channelMap.put(&apos;sending_facility_name&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_external_id&apos;, (msg[&apos;PID&apos;][&apos;PID.2&apos;][0][&apos;PID.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_internal_id&apos;,  (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;mrn&apos;, (msg[&apos;PID&apos;][&apos;PID.3&apos;][0][&apos;PID.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_account_number&apos;, msg[&apos;PID&apos;][&apos;PID.18&apos;][0][&apos;PID.18.1&apos;].toString());
channelMap.put(&apos;patient_last_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_first_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_middle_name&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;patient_suffix&apos;, (msg[&apos;PID&apos;][&apos;PID.5&apos;][0][&apos;PID.5.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;primary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.13&apos;][0][&apos;PID.13.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;secondary_phone_number&apos;, (msg[&apos;PID&apos;][&apos;PID.14&apos;][0][&apos;PID.14.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));



for (var i=0; i&lt; msg[&apos;PID&apos;][&apos;PID.11&apos;].length();i++){
	if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString()== &apos;E-MAIL&apos; &amp;&amp; (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString().length &lt;= 80)){
		channelMap.put(&apos;email_address&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.7&apos;].toString() == &apos;HOME&apos;){
		channelMap.put(&apos;address1&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		if(msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]==null){
		    channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}else if (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;]!=null){
			 channelMap.put(&apos;address2&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.2&apos;][&apos;PID.11.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		}
		channelMap.put(&apos;city&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;state&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
		channelMap.put(&apos;zip&apos;, (msg[&apos;PID&apos;][&apos;PID.11&apos;][i][&apos;PID.11.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}

channelMap.put(&apos;gender&apos;, msg[&apos;PID&apos;][&apos;PID.8&apos;][0][&apos;PID.8.1&apos;].toString());
channelMap.put(&apos;race&apos;, msg[&apos;PID&apos;][&apos;PID.10&apos;][0][&apos;PID.10.1&apos;].toString());
channelMap.put(&apos;language&apos;, msg[&apos;PID&apos;][&apos;PID.15&apos;][0][&apos;PID.15.1&apos;].toString());
channelMap.put(&apos;marital&apos;, msg[&apos;PID&apos;][&apos;PID.16&apos;][0][&apos;PID.16.1&apos;].toString());
if(msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().length &gt;=8){
    channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString().substring(0,8));
} else {
	channelMap.put(&apos;dob&apos;, msg[&apos;PID&apos;][&apos;PID.7&apos;][&apos;PID.7.1&apos;].toString());
}


channelMap.put(&apos;visit_number&apos;, msg[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;PV1.19.1&apos;].toString());
channelMap.put(&apos;visit_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.18&apos;][&apos;PV1.18.1&apos;].toString());
channelMap.put(&apos;visit_date&apos;, msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());

for (var i=0; i&lt; msg[&apos;PV1&apos;][&apos;PV1.7&apos;].length(); i++) {
	if ( (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;National Provider Identifier&apos;) ||  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString() == &apos;NPI&apos;)) {
		channelMap.put(&apos;attending_doctor_id&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.1&apos;].toString());
		channelMap.put(&apos;attending_doctor_id_type&apos;, msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.13&apos;].toString());
          channelMap.put(&apos;attending_doctor_last_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.2&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_first_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.3&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_middle_name&apos;,  (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.4&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_suffix&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.5&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;attending_doctor_degree&apos;, (msg[&apos;PV1&apos;][&apos;PV1.7&apos;][i][&apos;PV1.7.7&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}


if (msg[&apos;IN1&apos;].length()==1){
     channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
} else if (msg[&apos;IN1&apos;].length()&gt;1){
	channelMap.put(&apos;primary_payer_id&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.3&apos;][&apos;IN1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_payer_name&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.4&apos;][&apos;IN1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
     channelMap.put(&apos;primary_plan_type&apos;, (msg[&apos;IN1&apos;][0][&apos;IN1.15&apos;][&apos;IN1.15.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
}


for (var i=0; i&lt;msg[&apos;DG1&apos;].length(); i++) {
	if(i==0){
		channelMap.put(&apos;primary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;primary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==1){
		channelMap.put(&apos;secondary_diagnosis&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;secondary_diag_description&apos;, (msg[&apos;DG1&apos;][i][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
	if(i==2){
		channelMap.put(&apos;tertiary_diagnosis&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.3&apos;][0][&apos;DG1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_coding_system&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.2&apos;][0][&apos;DG1.2.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
          channelMap.put(&apos;tertiary_diag_description&apos;, (msg[&apos;DG1&apos;][2][&apos;DG1.4&apos;][&apos;DG1.4.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
	}
}





channelMap.put(&apos;location&apos;, (msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString()).replace(/&apos;/g, &quot;\\&apos;&quot;));
channelMap.put(&apos;discharge_status&apos;, msg[&apos;PV1&apos;][&apos;PV1.36&apos;][&apos;PV1.36.1&apos;].toString());

channelMap.put(&apos;admit_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString());
if((msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==null) || (msg[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;PV1.45.1&apos;].toString()==&apos;&apos;)){
	channelMap.put(&apos;discharge_timestamp&apos;,  msg[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;PV1.44.1&apos;].toString());
}
channelMap.put(&apos;ethnic_group&apos;, msg[&apos;PID&apos;][&apos;PID.22&apos;][&apos;PID.22.1&apos;].toString());
channelMap.put(&apos;death_indicator&apos;,  msg[&apos;PID&apos;][&apos;PID.30&apos;][&apos;PID.30.1&apos;].toString());
channelMap.put(&apos;admit_source&apos;, msg[&apos;PV1&apos;][&apos;PV1.14&apos;][&apos;PV1.14.1&apos;].toString());
channelMap.put(&apos;processing_status&apos;,  &apos;r&apos;);</string>
                  </entry>
                </data>
              </step>
            </steps>
            <inboundTemplate encoding="base64">TVNIfF5+XCZ8TUlMTE9VVHxTV0dIQ3xDQUl8U1dHSHwyMDE3MDIyNzAwMDI0M3x8QURUXkEwNHxR
NTkzNTIxODEzVDY2Nzg3Njg5OVgxNTgxNTh8fDIuM3x8fHx8fDg4NTkvMQpFVk58QTA0fDIwMTcw
MjI3MDAwMjAwfHx8MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5DRDox
MTQ5ODgxMzh+MjAwOTM5XkJlbnpeS2FsZWlnaF5OXlJOXnNzIC0gNTEyMF5eXl5eXl5QUlNOTElE
fjIwMDkzOV5CZW56XkthbGVpZ2heTl5STl5zcyAtIDUxMjBeXl5DRDoyODM1NTMwNTNeXl5eUGVy
c29ubmVsIEJhZGdlIElEClBJRHwxfDMxOTk5NTB8MzE5OTk1MHx8R1JJR0dTXktZUklFRV5NfHwy
MDE2MDIxNnxNfEdSSUdHU15LWVJJRV5NfEJ8NTMzIENIRVNUTlVUIERSXl5CZXJlYV5PSF40NDAx
N15VU0FeSE9NRX5SZWZ1c2VkXl5eXl5eRS1NQUlMfHwoNDQwKTg2NTQxNDReSG9tZV5UZWx+KDQ0
MCk4NjUtMTQxMV5QYWdlciBwZXJzb25hbHx8RU5HfFN8TlB8MzE5OTk1MDE0MDR8fHx8fHx8MApQ
RDF8fHx8XldJTExJQU1TXkdBUlkgRApQVjF8MXxFfEVNRVJeXl4wMDAwMF5eQU1CXlNXR0hDfDF8
fHwxNzcwODQ5MDY5XkZBTElUWl5JTEFOQV5eTUReXl5eQ0Q6NTUxNjMzMDBeXl5eTmF0aW9uYWwg
UHJvdmlkZXIgSWRlbnRpZmllcn40ODg0XkZBTElUWl5JTEFOQV5eTUReXl5eXl5eXkNPTU1VTklU
WSBEUiBOQlJ8fHxFUnx8fHw3fHx8fEV8MzE5OTk1MDE0MDR8U3x8fHx8fHx8fHx8fHx8fHx8fHww
MDAwMHx8QXx8fDIwMTcwMjI3MDAwMjAwClBWMnx8fF5DT1VHSC9DT05HRVNUSU9OL0ZFVkVSfHx8
fHx8fDB8fHx8fHx8fHx8fFllc3xDRDo0NjB8Xl40Ck9CWHwxfENEfEVEX0ZTSXx8WQpPQlh8MnxD
RHxSRUFTT05fTk9TU058fFVua25vd24KT0JYfDN8Q0R8UEFUSUVOVFBPUlRBfHxDRDoxMzAyODk0
NTkKT0JYfDR8RFR8UFJJVkFDWURBVEV8fDIwMTYwNTI2MDAwMDAwCk9CWHw1fENEfFBSSVZBQ1l8
fFkKT0JYfDZ8U1R8RXRyZWJ5LVBlcnNvbl9JZF5FdHJlYnktUGVyc29uX0lkfHw0MDQyNDg1fHx8
fHx8Rnx8fDIwMTcwMjI3MDAwMgpHVDF8MXwzMTk5OTUwfHx8fHx8fHx8U0V8fHx8fEtGQyBLRU5U
VUNLWSBGUklFRCBDSElDS0VOIFNUUk9OR1NWSUxMRXwgUEVBUkwgUkReXlNUUk9OR1NWSUxMRV5P
SF40NDEzNl5VU0F8KDQ0MCk1NzItOTM5OV5CdXNpbmVzc3x8MXx8fHx8fHx8fDg3MTEyNnx8fHx8
fHx8fHx8fHx8fHx8fHx8Q09PSwpaR0l8QUxUXjIwMTYwNTI2MTQxODIzXjIxMDAxMjMxMDAwMDAw
Cg==</inboundTemplate>
            <outboundTemplate encoding="base64"></outboundTemplate>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules>
              <rule>
                <sequenceNumber>0</sequenceNumber>
                <name>Filter ER Patient</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp; 
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BRED&apos; ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;EMER&apos;  )) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;) &amp;&amp; 
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;BRED&apos; ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;EMER&apos;  )) {
	return true;
}
return false;</script>
                <operator>NONE</operator>
              </rule>
              <rule>
                <sequenceNumber>1</sequenceNumber>
                <name>Filter Ambulatory Patient</name>
                <data>
                  <entry>
                    <string>Script</string>
                    <string>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp; 
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHVR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBCARM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBENDO&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPBE&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPBR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBCCMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPNR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPST&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGENS&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBMEX&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGIP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGIMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GERO&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBONC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBIMSV&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBIMMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBNCSTV&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PMCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBVASMH&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBVASBR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHMH&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHST&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ONCL&apos;)) {
	return true;
}
return false;</string>
                  </entry>
                </data>
                <type>JavaScript</type>
                <script>if((msg[&apos;MSH&apos;][&apos;MSH.9&apos;][&apos;MSH.9.2&apos;].toString() == &apos;A03&apos;)  &amp;&amp; 
        ( msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHVR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBCARM&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBENDO&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPBE&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPBR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBCCMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPNR&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBFPST&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGENS&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBMEX&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGIP&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBGIMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;GERO&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBONC&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBIMSV&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBIMMH&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBNCSTV&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;PMCL&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBVASMH&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBVASBR&apos;
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHMH&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;AMBWHST&apos; 
        ||  msg[&apos;PV1&apos;][&apos;PV1.3&apos;][&apos;PV1.3.1&apos;].toString() == &apos;ONCL&apos;)) {
	return true;
}
return false;</script>
                <operator>OR</operator>
              </rule>
            </rules>
          </filter>
          <transportName>Database Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>6b09caf2-77c1-4f4c-b526-0ffba87b4087</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>Test-ASA_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1507908877475</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>3</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>22222</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress></responseAddress>
          <responsePort></responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>c:/users/yyyhu/hl7/out</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
    <channel version="3.4.2">
      <id>73cc143e-3c01-428c-94f3-59ca59aaa4d2</id>
      <nextMetaDataId>2</nextMetaDataId>
      <name>Test_LLP</name>
      <description></description>
      <enabled>true</enabled>
      <lastModified>
        <time>1509397577449</time>
        <timezone>UTC</timezone>
      </lastModified>
      <revision>10</revision>
      <sourceConnector version="3.4.2">
        <metaDataId>0</metaDataId>
        <name>sourceConnector</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties" version="3.4.2">
          <pluginProperties/>
          <listenerConnectorProperties version="3.4.2">
            <host>0.0.0.0</host>
            <port>50222</port>
          </listenerConnectorProperties>
          <sourceConnectorProperties version="3.4.2">
            <responseVariable>Auto-generate (After source transformer)</responseVariable>
            <respondAfterProcessing>true</respondAfterProcessing>
            <processBatch>true</processBatch>
            <firstResponse>true</firstResponse>
            <processingThreads>1</processingThreads>
            <resourceIds class="linked-hash-map">
              <entry>
                <string>Default Resource</string>
                <string>[Default Resource]</string>
              </entry>
            </resourceIds>
            <queueBufferSize>1000</queueBufferSize>
          </sourceConnectorProperties>
          <transmissionModeProperties class="com.mirth.connect.plugins.mllpmode.MLLPModeProperties">
            <pluginPointName>MLLP</pluginPointName>
            <startOfMessageBytes>0B</startOfMessageBytes>
            <endOfMessageBytes>1C0D</endOfMessageBytes>
            <useMLLPv2>false</useMLLPv2>
            <ackBytes>06</ackBytes>
            <nackBytes>15</nackBytes>
            <maxRetries>2</maxRetries>
          </transmissionModeProperties>
          <serverMode>true</serverMode>
          <remoteAddress></remoteAddress>
          <remotePort></remotePort>
          <overrideLocalBinding>false</overrideLocalBinding>
          <reconnectInterval>5000</reconnectInterval>
          <receiveTimeout>0</receiveTimeout>
          <bufferSize>65536</bufferSize>
          <maxConnections>10</maxConnections>
          <keepConnectionOpen>true</keepConnectionOpen>
          <dataTypeBinary>false</dataTypeBinary>
          <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
          <respondOnNewConnection>0</respondOnNewConnection>
          <responseAddress></responseAddress>
          <responsePort></responsePort>
        </properties>
        <transformer version="3.4.2">
          <steps/>
          <inboundDataType>HL7V2</inboundDataType>
          <outboundDataType>HL7V2</outboundDataType>
          <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </inboundProperties>
          <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
            <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
              <handleRepetitions>true</handleRepetitions>
              <handleSubcomponents>true</handleSubcomponents>
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <stripNamespaces>true</stripNamespaces>
              <segmentDelimiter>\r</segmentDelimiter>
              <convertLineBreaks>true</convertLineBreaks>
            </serializationProperties>
            <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
              <useStrictParser>false</useStrictParser>
              <useStrictValidation>false</useStrictValidation>
              <segmentDelimiter>\r</segmentDelimiter>
            </deserializationProperties>
            <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
              <splitType>MSH_Segment</splitType>
              <batchScript></batchScript>
            </batchProperties>
            <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
              <segmentDelimiter>\r</segmentDelimiter>
              <successfulACKCode>AA</successfulACKCode>
              <successfulACKMessage></successfulACKMessage>
              <errorACKCode>AE</errorACKCode>
              <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
              <rejectedACKCode>AR</rejectedACKCode>
              <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
              <msh15ACKAccept>false</msh15ACKAccept>
              <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
            </responseGenerationProperties>
            <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
              <successfulACKCode>AA,CA</successfulACKCode>
              <errorACKCode>AE,CE</errorACKCode>
              <rejectedACKCode>AR,CR</rejectedACKCode>
              <validateMessageControlId>true</validateMessageControlId>
              <originalMessageControlId>Destination_Encoded</originalMessageControlId>
              <originalIdMapVariable></originalIdMapVariable>
            </responseValidationProperties>
          </outboundProperties>
        </transformer>
        <filter version="3.4.2">
          <rules/>
        </filter>
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
      </sourceConnector>
      <destinationConnectors>
        <connector version="3.4.2">
          <metaDataId>1</metaDataId>
          <name>File_depot</name>
          <properties class="com.mirth.connect.connectors.file.FileDispatcherProperties" version="3.4.2">
            <pluginProperties/>
            <destinationConnectorProperties version="3.4.2">
              <queueEnabled>false</queueEnabled>
              <sendFirst>false</sendFirst>
              <retryIntervalMillis>10000</retryIntervalMillis>
              <regenerateTemplate>false</regenerateTemplate>
              <retryCount>0</retryCount>
              <rotate>false</rotate>
              <includeFilterTransformer>false</includeFilterTransformer>
              <threadCount>1</threadCount>
              <threadAssignmentVariable></threadAssignmentVariable>
              <validateResponse>false</validateResponse>
              <resourceIds class="linked-hash-map">
                <entry>
                  <string>Default Resource</string>
                  <string>[Default Resource]</string>
                </entry>
              </resourceIds>
              <queueBufferSize>1000</queueBufferSize>
            </destinationConnectorProperties>
            <scheme>FILE</scheme>
            <host>c:/users/yyyhu/hl7/out</host>
            <outputPattern>${message.channelName}_${SYSTIME}_${pid}.hl7</outputPattern>
            <anonymous>true</anonymous>
            <username>anonymous</username>
            <password>anonymous</password>
            <timeout>10000</timeout>
            <secure>true</secure>
            <passive>true</passive>
            <validateConnection>true</validateConnection>
            <outputAppend>true</outputAppend>
            <errorOnExists>false</errorOnExists>
            <temporary>false</temporary>
            <binary>false</binary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <template>${message.encodedData}</template>
          </properties>
          <transformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </transformer>
          <responseTransformer version="3.4.2">
            <steps/>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties" version="3.4.2">
              <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties" version="3.4.2">
                <handleRepetitions>true</handleRepetitions>
                <handleSubcomponents>true</handleSubcomponents>
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <stripNamespaces>true</stripNamespaces>
                <segmentDelimiter>\r</segmentDelimiter>
                <convertLineBreaks>true</convertLineBreaks>
              </serializationProperties>
              <deserializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DeserializationProperties" version="3.4.2">
                <useStrictParser>false</useStrictParser>
                <useStrictValidation>false</useStrictValidation>
                <segmentDelimiter>\r</segmentDelimiter>
              </deserializationProperties>
              <batchProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2BatchProperties" version="3.4.2">
                <splitType>MSH_Segment</splitType>
                <batchScript></batchScript>
              </batchProperties>
              <responseGenerationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseGenerationProperties" version="3.4.2">
                <segmentDelimiter>\r</segmentDelimiter>
                <successfulACKCode>AA</successfulACKCode>
                <successfulACKMessage></successfulACKMessage>
                <errorACKCode>AE</errorACKCode>
                <errorACKMessage>An Error Occurred Processing Message.</errorACKMessage>
                <rejectedACKCode>AR</rejectedACKCode>
                <rejectedACKMessage>Message Rejected.</rejectedACKMessage>
                <msh15ACKAccept>false</msh15ACKAccept>
                <dateFormat>yyyyMMddHHmmss.SSS</dateFormat>
              </responseGenerationProperties>
              <responseValidationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2ResponseValidationProperties" version="3.4.2">
                <successfulACKCode>AA,CA</successfulACKCode>
                <errorACKCode>AE,CE</errorACKCode>
                <rejectedACKCode>AR,CR</rejectedACKCode>
                <validateMessageControlId>true</validateMessageControlId>
                <originalMessageControlId>Destination_Encoded</originalMessageControlId>
                <originalIdMapVariable></originalIdMapVariable>
              </responseValidationProperties>
            </outboundProperties>
          </responseTransformer>
          <filter version="3.4.2">
            <rules/>
          </filter>
          <transportName>File Writer</transportName>
          <mode>DESTINATION</mode>
          <enabled>true</enabled>
          <waitForPrevious>true</waitForPrevious>
        </connector>
      </destinationConnectors>
      <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
      <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
      <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
      <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
      <properties version="3.4.2">
        <clearGlobalChannelMap>true</clearGlobalChannelMap>
        <messageStorageMode>DEVELOPMENT</messageStorageMode>
        <encryptData>false</encryptData>
        <removeContentOnCompletion>false</removeContentOnCompletion>
        <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
        <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
        <initialState>STARTED</initialState>
        <storeAttachments>false</storeAttachments>
        <tags class="linked-hash-set"/>
        <metaDataColumns>
          <metaDataColumn>
            <name>SOURCE</name>
            <type>STRING</type>
            <mappingName>mirth_source</mappingName>
          </metaDataColumn>
          <metaDataColumn>
            <name>TYPE</name>
            <type>STRING</type>
            <mappingName>mirth_type</mappingName>
          </metaDataColumn>
        </metaDataColumns>
        <attachmentProperties version="3.4.2">
          <type>None</type>
          <properties/>
        </attachmentProperties>
        <archiveEnabled>true</archiveEnabled>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
      </properties>
      <codeTemplateLibraries/>
    </channel>
  </channels>
  <alerts/>
  <codeTemplateLibraries/>
  <serverSettings>
    <clearGlobalMap>true</clearGlobalMap>
    <queueBufferSize>1000</queueBufferSize>
    <defaultMetaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </defaultMetaDataColumns>
    <smtpTimeout>5000</smtpTimeout>
    <smtpSecure>0</smtpSecure>
    <smtpAuth>false</smtpAuth>
  </serverSettings>
  <updateSettings version="3.4.2">
    <statsEnabled>true</statsEnabled>
    <lastStatsTime>1489543245069</lastStatsTime>
  </updateSettings>
  <globalScripts>
    <entry>
      <string>Undeploy</string>
      <string>// This script executes once for each deploy, undeploy, or redeploy task
// if at least one channel was undeployed
// You only have access to the globalMap here to persist data
return;</string>
    </entry>
    <entry>
      <string>Postprocessor</string>
      <string>// This script executes once after a message has been processed
// This script applies across all channels
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
// You have access to &quot;response&quot;, if returned from the channel postprocessor
return;</string>
    </entry>
    <entry>
      <string>Deploy</string>
      <string>// This script executes once for each deploy or redeploy task
// You only have access to the globalMap here to persist data
return;</string>
    </entry>
    <entry>
      <string>Preprocessor</string>
      <string>// Modify the message variable below to pre process data
// This script applies across all channels
return message;</string>
    </entry>
  </globalScripts>
  <pluginProperties>
    <entry>
      <string>Data Pruner</string>
      <properties>
        <property name="archiveEnabled">false</property>
        <property name="archiverBlockSize">50</property>
        <property name="archiverOptions">&lt;com.mirth.connect.util.messagewriter.MessageWriterOptions&gt;
  &lt;destinationContent&gt;false&lt;/destinationContent&gt;
  &lt;encrypt&gt;false&lt;/encrypt&gt;
  &lt;includeAttachments&gt;false&lt;/includeAttachments&gt;
  &lt;rootFolder&gt;&lt;/rootFolder&gt;
  &lt;filePattern&gt;&lt;/filePattern&gt;
&lt;/com.mirth.connect.util.messagewriter.MessageWriterOptions&gt;</property>
        <property name="enabled">false</property>
        <property name="includeAttachments">false</property>
        <property name="maxEventAge">8</property>
        <property name="pollingProperties">&lt;com.mirth.connect.donkey.model.channel.PollConnectorProperties version=&quot;3.4.2&quot;&gt;
  &lt;pollingType&gt;TIME&lt;/pollingType&gt;
  &lt;pollOnStart&gt;false&lt;/pollOnStart&gt;
  &lt;pollingFrequency&gt;5000&lt;/pollingFrequency&gt;
  &lt;pollingHour&gt;5&lt;/pollingHour&gt;
  &lt;pollingMinute&gt;8&lt;/pollingMinute&gt;
  &lt;cronJobs/&gt;
  &lt;pollConnectorPropertiesAdvanced&gt;
    &lt;weekly&gt;true&lt;/weekly&gt;
    &lt;inactiveDays&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;true&lt;/boolean&gt;
      &lt;boolean&gt;true&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
      &lt;boolean&gt;true&lt;/boolean&gt;
      &lt;boolean&gt;true&lt;/boolean&gt;
      &lt;boolean&gt;false&lt;/boolean&gt;
    &lt;/inactiveDays&gt;
    &lt;dayOfMonth&gt;1&lt;/dayOfMonth&gt;
    &lt;allDay&gt;true&lt;/allDay&gt;
    &lt;startingHour&gt;8&lt;/startingHour&gt;
    &lt;startingMinute&gt;0&lt;/startingMinute&gt;
    &lt;endingHour&gt;17&lt;/endingHour&gt;
    &lt;endingMinute&gt;0&lt;/endingMinute&gt;
  &lt;/pollConnectorPropertiesAdvanced&gt;
&lt;/com.mirth.connect.donkey.model.channel.PollConnectorProperties&gt;</property>
        <property name="pruneEvents">true</property>
        <property name="pruningBlockSize">1000</property>
      </properties>
    </entry>
  </pluginProperties>
  <resourceProperties>
    <list>
      <com.mirth.connect.plugins.directoryresource.DirectoryResourceProperties version="3.4.2">
  <pluginPointName>Directory Resource</pluginPointName>
        <type>Directory</type>
        <id>Default Resource</id>
        <name>[Default Resource]</name>
        <description>Loads libraries from the custom-lib folder in the Mirth Connect home directory.</description>
        <includeWithGlobalScripts>true</includeWithGlobalScripts>
        <directory>custom-lib</directory>
        <directoryRecursion>true</directoryRecursion>
      </com.mirth.connect.plugins.directoryresource.DirectoryResourceProperties>
    </list>
  </resourceProperties>
  <channelDependencies/>
</serverConfiguration>